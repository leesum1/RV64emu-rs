<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="694" onload="init(evt)" viewBox="0 0 1200 694" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="694" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="677.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="677.00"> </text><svg id="frames" x="10" width="1180" total_samples="16828"><g><title>riscv64-:gdrv0 (6 samples, 0.04%)</title><rect x="0.0000%" y="629" width="0.0357%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="6"/><text x="0.2500%" y="639.50"></text></g><g><title>[[heap]] (6 samples, 0.04%)</title><rect x="0.0000%" y="613" width="0.0357%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="6"/><text x="0.2500%" y="623.50"></text></g><g><title>[libc.so.6] (6 samples, 0.04%)</title><rect x="0.0000%" y="597" width="0.0357%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="6"/><text x="0.2500%" y="607.50"></text></g><g><title>riscv64-em:sh4 (5 samples, 0.03%)</title><rect x="0.0475%" y="629" width="0.0297%" height="15" fill="rgb(248,212,6)" fg:x="8" fg:w="5"/><text x="0.2975%" y="639.50"></text></g><g><title>[libc.so.6] (5 samples, 0.03%)</title><rect x="0.0475%" y="613" width="0.0297%" height="15" fill="rgb(208,68,35)" fg:x="8" fg:w="5"/><text x="0.2975%" y="623.50"></text></g><g><title>[libc.so.6] (5 samples, 0.03%)</title><rect x="0.0475%" y="597" width="0.0297%" height="15" fill="rgb(232,128,0)" fg:x="8" fg:w="5"/><text x="0.2975%" y="607.50"></text></g><g><title>[iris_dri.so] (5 samples, 0.03%)</title><rect x="0.0475%" y="581" width="0.0297%" height="15" fill="rgb(207,160,47)" fg:x="8" fg:w="5"/><text x="0.2975%" y="591.50"></text></g><g><title>[iris_dri.so] (5 samples, 0.03%)</title><rect x="0.0475%" y="565" width="0.0297%" height="15" fill="rgb(228,23,34)" fg:x="8" fg:w="5"/><text x="0.2975%" y="575.50"></text></g><g><title>[iris_dri.so] (5 samples, 0.03%)</title><rect x="0.0475%" y="549" width="0.0297%" height="15" fill="rgb(218,30,26)" fg:x="8" fg:w="5"/><text x="0.2975%" y="559.50"></text></g><g><title>pthread_cond_wait (5 samples, 0.03%)</title><rect x="0.0475%" y="533" width="0.0297%" height="15" fill="rgb(220,122,19)" fg:x="8" fg:w="5"/><text x="0.2975%" y="543.50"></text></g><g><title>[libc.so.6] (5 samples, 0.03%)</title><rect x="0.0475%" y="517" width="0.0297%" height="15" fill="rgb(250,228,42)" fg:x="8" fg:w="5"/><text x="0.2975%" y="527.50"></text></g><g><title>[libc.so.6] (4 samples, 0.02%)</title><rect x="0.0773%" y="613" width="0.0238%" height="15" fill="rgb(240,193,28)" fg:x="13" fg:w="4"/><text x="0.3273%" y="623.50"></text></g><g><title>[libc.so.6] (4 samples, 0.02%)</title><rect x="0.0773%" y="597" width="0.0238%" height="15" fill="rgb(216,20,37)" fg:x="13" fg:w="4"/><text x="0.3273%" y="607.50"></text></g><g><title>[iris_dri.so] (4 samples, 0.02%)</title><rect x="0.0773%" y="581" width="0.0238%" height="15" fill="rgb(206,188,39)" fg:x="13" fg:w="4"/><text x="0.3273%" y="591.50"></text></g><g><title>[iris_dri.so] (4 samples, 0.02%)</title><rect x="0.0773%" y="565" width="0.0238%" height="15" fill="rgb(217,207,13)" fg:x="13" fg:w="4"/><text x="0.3273%" y="575.50"></text></g><g><title>[iris_dri.so] (4 samples, 0.02%)</title><rect x="0.0773%" y="549" width="0.0238%" height="15" fill="rgb(231,73,38)" fg:x="13" fg:w="4"/><text x="0.3273%" y="559.50"></text></g><g><title>pthread_cond_wait (4 samples, 0.02%)</title><rect x="0.0773%" y="533" width="0.0238%" height="15" fill="rgb(225,20,46)" fg:x="13" fg:w="4"/><text x="0.3273%" y="543.50"></text></g><g><title>[libc.so.6] (4 samples, 0.02%)</title><rect x="0.0773%" y="517" width="0.0238%" height="15" fill="rgb(210,31,41)" fg:x="13" fg:w="4"/><text x="0.3273%" y="527.50"></text></g><g><title>[libc.so.6] (4 samples, 0.02%)</title><rect x="0.0773%" y="501" width="0.0238%" height="15" fill="rgb(221,200,47)" fg:x="13" fg:w="4"/><text x="0.3273%" y="511.50"></text></g><g><title>riscv64-em:sh6 (5 samples, 0.03%)</title><rect x="0.0773%" y="629" width="0.0297%" height="15" fill="rgb(226,26,5)" fg:x="13" fg:w="5"/><text x="0.3273%" y="639.50"></text></g><g><title>riscv64-em:sh7 (5 samples, 0.03%)</title><rect x="0.1070%" y="629" width="0.0297%" height="15" fill="rgb(249,33,26)" fg:x="18" fg:w="5"/><text x="0.3570%" y="639.50"></text></g><g><title>[libc.so.6] (5 samples, 0.03%)</title><rect x="0.1070%" y="613" width="0.0297%" height="15" fill="rgb(235,183,28)" fg:x="18" fg:w="5"/><text x="0.3570%" y="623.50"></text></g><g><title>[libc.so.6] (5 samples, 0.03%)</title><rect x="0.1070%" y="597" width="0.0297%" height="15" fill="rgb(221,5,38)" fg:x="18" fg:w="5"/><text x="0.3570%" y="607.50"></text></g><g><title>[iris_dri.so] (5 samples, 0.03%)</title><rect x="0.1070%" y="581" width="0.0297%" height="15" fill="rgb(247,18,42)" fg:x="18" fg:w="5"/><text x="0.3570%" y="591.50"></text></g><g><title>[iris_dri.so] (5 samples, 0.03%)</title><rect x="0.1070%" y="565" width="0.0297%" height="15" fill="rgb(241,131,45)" fg:x="18" fg:w="5"/><text x="0.3570%" y="575.50"></text></g><g><title>[iris_dri.so] (5 samples, 0.03%)</title><rect x="0.1070%" y="549" width="0.0297%" height="15" fill="rgb(249,31,29)" fg:x="18" fg:w="5"/><text x="0.3570%" y="559.50"></text></g><g><title>pthread_cond_wait (5 samples, 0.03%)</title><rect x="0.1070%" y="533" width="0.0297%" height="15" fill="rgb(225,111,53)" fg:x="18" fg:w="5"/><text x="0.3570%" y="543.50"></text></g><g><title>[libc.so.6] (5 samples, 0.03%)</title><rect x="0.1070%" y="517" width="0.0297%" height="15" fill="rgb(238,160,17)" fg:x="18" fg:w="5"/><text x="0.3570%" y="527.50"></text></g><g><title>riscv64-em:sh8 (2 samples, 0.01%)</title><rect x="0.1367%" y="629" width="0.0119%" height="15" fill="rgb(214,148,48)" fg:x="23" fg:w="2"/><text x="0.3867%" y="639.50"></text></g><g><title>[libc.so.6] (2 samples, 0.01%)</title><rect x="0.1664%" y="597" width="0.0119%" height="15" fill="rgb(232,36,49)" fg:x="28" fg:w="2"/><text x="0.4164%" y="607.50"></text></g><g><title>[[heap]] (9 samples, 0.05%)</title><rect x="0.1486%" y="613" width="0.0535%" height="15" fill="rgb(209,103,24)" fg:x="25" fg:w="9"/><text x="0.3986%" y="623.50"></text></g><g><title>[[stack]] (2 samples, 0.01%)</title><rect x="0.2020%" y="613" width="0.0119%" height="15" fill="rgb(229,88,8)" fg:x="34" fg:w="2"/><text x="0.4520%" y="623.50"></text></g><g><title>[ld-linux-x86-64.so.2] (6 samples, 0.04%)</title><rect x="0.2199%" y="613" width="0.0357%" height="15" fill="rgb(213,181,19)" fg:x="37" fg:w="6"/><text x="0.4699%" y="623.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.01%)</title><rect x="0.2436%" y="597" width="0.0119%" height="15" fill="rgb(254,191,54)" fg:x="41" fg:w="2"/><text x="0.4936%" y="607.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.01%)</title><rect x="0.2436%" y="581" width="0.0119%" height="15" fill="rgb(241,83,37)" fg:x="41" fg:w="2"/><text x="0.4936%" y="591.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.01%)</title><rect x="0.2436%" y="565" width="0.0119%" height="15" fill="rgb(233,36,39)" fg:x="41" fg:w="2"/><text x="0.4936%" y="575.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (984 samples, 5.85%)</title><rect x="2.7454%" y="341" width="5.8474%" height="15" fill="rgb(226,3,54)" fg:x="462" fg:w="984"/><text x="2.9954%" y="351.50">&lt;core::..</text></g><g><title>core::cell::Cell&lt;T&gt;::get (2 samples, 0.01%)</title><rect x="9.2940%" y="309" width="0.0119%" height="15" fill="rgb(245,192,40)" fg:x="1564" fg:w="2"/><text x="9.5440%" y="319.50"></text></g><g><title>[iris_dri.so] (12 samples, 0.07%)</title><rect x="9.4426%" y="69" width="0.0713%" height="15" fill="rgb(238,167,29)" fg:x="1589" fg:w="12"/><text x="9.6926%" y="79.50"></text></g><g><title>[iris_dri.so] (7 samples, 0.04%)</title><rect x="9.4723%" y="53" width="0.0416%" height="15" fill="rgb(232,182,51)" fg:x="1594" fg:w="7"/><text x="9.7223%" y="63.50"></text></g><g><title>[iris_dri.so] (4 samples, 0.02%)</title><rect x="9.4901%" y="37" width="0.0238%" height="15" fill="rgb(231,60,39)" fg:x="1597" fg:w="4"/><text x="9.7401%" y="47.50"></text></g><g><title>[iris_dri.so] (30 samples, 0.18%)</title><rect x="9.3416%" y="133" width="0.1783%" height="15" fill="rgb(208,69,12)" fg:x="1572" fg:w="30"/><text x="9.5916%" y="143.50"></text></g><g><title>[iris_dri.so] (28 samples, 0.17%)</title><rect x="9.3535%" y="117" width="0.1664%" height="15" fill="rgb(235,93,37)" fg:x="1574" fg:w="28"/><text x="9.6035%" y="127.50"></text></g><g><title>[iris_dri.so] (28 samples, 0.17%)</title><rect x="9.3535%" y="101" width="0.1664%" height="15" fill="rgb(213,116,39)" fg:x="1574" fg:w="28"/><text x="9.6035%" y="111.50"></text></g><g><title>[iris_dri.so] (25 samples, 0.15%)</title><rect x="9.3713%" y="85" width="0.1486%" height="15" fill="rgb(222,207,29)" fg:x="1577" fg:w="25"/><text x="9.6213%" y="95.50"></text></g><g><title>[iris_dri.so] (35 samples, 0.21%)</title><rect x="9.3178%" y="197" width="0.2080%" height="15" fill="rgb(206,96,30)" fg:x="1568" fg:w="35"/><text x="9.5678%" y="207.50"></text></g><g><title>[iris_dri.so] (35 samples, 0.21%)</title><rect x="9.3178%" y="181" width="0.2080%" height="15" fill="rgb(218,138,4)" fg:x="1568" fg:w="35"/><text x="9.5678%" y="191.50"></text></g><g><title>[iris_dri.so] (35 samples, 0.21%)</title><rect x="9.3178%" y="165" width="0.2080%" height="15" fill="rgb(250,191,14)" fg:x="1568" fg:w="35"/><text x="9.5678%" y="175.50"></text></g><g><title>[iris_dri.so] (34 samples, 0.20%)</title><rect x="9.3237%" y="149" width="0.2020%" height="15" fill="rgb(239,60,40)" fg:x="1569" fg:w="34"/><text x="9.5737%" y="159.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (37 samples, 0.22%)</title><rect x="9.3178%" y="245" width="0.2199%" height="15" fill="rgb(206,27,48)" fg:x="1568" fg:w="37"/><text x="9.5678%" y="255.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (37 samples, 0.22%)</title><rect x="9.3178%" y="229" width="0.2199%" height="15" fill="rgb(225,35,8)" fg:x="1568" fg:w="37"/><text x="9.5678%" y="239.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (37 samples, 0.22%)</title><rect x="9.3178%" y="213" width="0.2199%" height="15" fill="rgb(250,213,24)" fg:x="1568" fg:w="37"/><text x="9.5678%" y="223.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (2 samples, 0.01%)</title><rect x="9.5258%" y="197" width="0.0119%" height="15" fill="rgb(247,123,22)" fg:x="1603" fg:w="2"/><text x="9.7758%" y="207.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (2 samples, 0.01%)</title><rect x="9.5258%" y="181" width="0.0119%" height="15" fill="rgb(231,138,38)" fg:x="1603" fg:w="2"/><text x="9.7758%" y="191.50"></text></g><g><title>xcb_poll_for_special_event (2 samples, 0.01%)</title><rect x="9.5258%" y="165" width="0.0119%" height="15" fill="rgb(231,145,46)" fg:x="1603" fg:w="2"/><text x="9.7758%" y="175.50"></text></g><g><title>[iris_dri.so] (11 samples, 0.07%)</title><rect x="9.5377%" y="229" width="0.0654%" height="15" fill="rgb(251,118,11)" fg:x="1605" fg:w="11"/><text x="9.7877%" y="239.50"></text></g><g><title>[iris_dri.so] (10 samples, 0.06%)</title><rect x="9.5436%" y="213" width="0.0594%" height="15" fill="rgb(217,147,25)" fg:x="1606" fg:w="10"/><text x="9.7936%" y="223.50"></text></g><g><title>[iris_dri.so] (8 samples, 0.05%)</title><rect x="9.5555%" y="197" width="0.0475%" height="15" fill="rgb(247,81,37)" fg:x="1608" fg:w="8"/><text x="9.8055%" y="207.50"></text></g><g><title>[iris_dri.so] (7 samples, 0.04%)</title><rect x="9.5614%" y="181" width="0.0416%" height="15" fill="rgb(209,12,38)" fg:x="1609" fg:w="7"/><text x="9.8114%" y="191.50"></text></g><g><title>[iris_dri.so] (5 samples, 0.03%)</title><rect x="9.5733%" y="165" width="0.0297%" height="15" fill="rgb(227,1,9)" fg:x="1611" fg:w="5"/><text x="9.8233%" y="175.50"></text></g><g><title>[iris_dri.so] (2 samples, 0.01%)</title><rect x="9.5912%" y="149" width="0.0119%" height="15" fill="rgb(248,47,43)" fg:x="1614" fg:w="2"/><text x="9.8412%" y="159.50"></text></g><g><title>[iris_dri.so] (2 samples, 0.01%)</title><rect x="9.5912%" y="133" width="0.0119%" height="15" fill="rgb(221,10,30)" fg:x="1614" fg:w="2"/><text x="9.8412%" y="143.50"></text></g><g><title>[iris_dri.so] (2 samples, 0.01%)</title><rect x="9.5912%" y="117" width="0.0119%" height="15" fill="rgb(210,229,1)" fg:x="1614" fg:w="2"/><text x="9.8412%" y="127.50"></text></g><g><title>[libSDL2-2.0.so.0.2600.3] (12 samples, 0.07%)</title><rect x="9.5377%" y="245" width="0.0713%" height="15" fill="rgb(222,148,37)" fg:x="1605" fg:w="12"/><text x="9.7877%" y="255.50"></text></g><g><title>sdl2::render::Canvas&lt;T&gt;::present (51 samples, 0.30%)</title><rect x="9.3178%" y="293" width="0.3031%" height="15" fill="rgb(234,67,33)" fg:x="1568" fg:w="51"/><text x="9.5678%" y="303.50"></text></g><g><title>[libSDL2-2.0.so.0.2600.3] (51 samples, 0.30%)</title><rect x="9.3178%" y="277" width="0.3031%" height="15" fill="rgb(247,98,35)" fg:x="1568" fg:w="51"/><text x="9.5678%" y="287.50"></text></g><g><title>[libSDL2-2.0.so.0.2600.3] (51 samples, 0.30%)</title><rect x="9.3178%" y="261" width="0.3031%" height="15" fill="rgb(247,138,52)" fg:x="1568" fg:w="51"/><text x="9.5678%" y="271.50"></text></g><g><title>glXSwapBuffers (2 samples, 0.01%)</title><rect x="9.6090%" y="245" width="0.0119%" height="15" fill="rgb(213,79,30)" fg:x="1617" fg:w="2"/><text x="9.8590%" y="255.50"></text></g><g><title>[libGLX.so.0.0.0] (2 samples, 0.01%)</title><rect x="9.6090%" y="229" width="0.0119%" height="15" fill="rgb(246,177,23)" fg:x="1617" fg:w="2"/><text x="9.8590%" y="239.50"></text></g><g><title>[iris_dri.so] (5 samples, 0.03%)</title><rect x="9.6268%" y="165" width="0.0297%" height="15" fill="rgb(230,62,27)" fg:x="1620" fg:w="5"/><text x="9.8768%" y="175.50"></text></g><g><title>[iris_dri.so] (5 samples, 0.03%)</title><rect x="9.6268%" y="149" width="0.0297%" height="15" fill="rgb(216,154,8)" fg:x="1620" fg:w="5"/><text x="9.8768%" y="159.50"></text></g><g><title>[iris_dri.so] (2 samples, 0.01%)</title><rect x="9.6446%" y="133" width="0.0119%" height="15" fill="rgb(244,35,45)" fg:x="1623" fg:w="2"/><text x="9.8946%" y="143.50"></text></g><g><title>sdl2::render::Texture::update (45 samples, 0.27%)</title><rect x="9.6268%" y="293" width="0.2674%" height="15" fill="rgb(251,115,12)" fg:x="1620" fg:w="45"/><text x="9.8768%" y="303.50"></text></g><g><title>sdl2::render::InternalTexture::update (45 samples, 0.27%)</title><rect x="9.6268%" y="277" width="0.2674%" height="15" fill="rgb(240,54,50)" fg:x="1620" fg:w="45"/><text x="9.8768%" y="287.50"></text></g><g><title>[libSDL2-2.0.so.0.2600.3] (45 samples, 0.27%)</title><rect x="9.6268%" y="261" width="0.2674%" height="15" fill="rgb(233,84,52)" fg:x="1620" fg:w="45"/><text x="9.8768%" y="271.50"></text></g><g><title>[libSDL2-2.0.so.0.2600.3] (45 samples, 0.27%)</title><rect x="9.6268%" y="245" width="0.2674%" height="15" fill="rgb(207,117,47)" fg:x="1620" fg:w="45"/><text x="9.8768%" y="255.50"></text></g><g><title>[iris_dri.so] (45 samples, 0.27%)</title><rect x="9.6268%" y="229" width="0.2674%" height="15" fill="rgb(249,43,39)" fg:x="1620" fg:w="45"/><text x="9.8768%" y="239.50"></text></g><g><title>[iris_dri.so] (45 samples, 0.27%)</title><rect x="9.6268%" y="213" width="0.2674%" height="15" fill="rgb(209,38,44)" fg:x="1620" fg:w="45"/><text x="9.8768%" y="223.50"></text></g><g><title>[iris_dri.so] (45 samples, 0.27%)</title><rect x="9.6268%" y="197" width="0.2674%" height="15" fill="rgb(236,212,23)" fg:x="1620" fg:w="45"/><text x="9.8768%" y="207.50"></text></g><g><title>[iris_dri.so] (45 samples, 0.27%)</title><rect x="9.6268%" y="181" width="0.2674%" height="15" fill="rgb(242,79,21)" fg:x="1620" fg:w="45"/><text x="9.8768%" y="191.50"></text></g><g><title>[libc.so.6] (40 samples, 0.24%)</title><rect x="9.6565%" y="165" width="0.2377%" height="15" fill="rgb(211,96,35)" fg:x="1625" fg:w="40"/><text x="9.9065%" y="175.50"></text></g><g><title>[iris_dri.so] (14 samples, 0.08%)</title><rect x="9.9061%" y="165" width="0.0832%" height="15" fill="rgb(253,215,40)" fg:x="1667" fg:w="14"/><text x="10.1561%" y="175.50"></text></g><g><title>[iris_dri.so] (10 samples, 0.06%)</title><rect x="9.9299%" y="149" width="0.0594%" height="15" fill="rgb(211,81,21)" fg:x="1671" fg:w="10"/><text x="10.1799%" y="159.50"></text></g><g><title>[iris_dri.so] (5 samples, 0.03%)</title><rect x="9.9596%" y="133" width="0.0297%" height="15" fill="rgb(208,190,38)" fg:x="1676" fg:w="5"/><text x="10.2096%" y="143.50"></text></g><g><title>[iris_dri.so] (3 samples, 0.02%)</title><rect x="9.9715%" y="117" width="0.0178%" height="15" fill="rgb(235,213,38)" fg:x="1678" fg:w="3"/><text x="10.2215%" y="127.50"></text></g><g><title>[iris_dri.so] (3 samples, 0.02%)</title><rect x="9.9715%" y="101" width="0.0178%" height="15" fill="rgb(237,122,38)" fg:x="1678" fg:w="3"/><text x="10.2215%" y="111.50"></text></g><g><title>[iris_dri.so] (3 samples, 0.02%)</title><rect x="9.9715%" y="85" width="0.0178%" height="15" fill="rgb(244,218,35)" fg:x="1678" fg:w="3"/><text x="10.2215%" y="95.50"></text></g><g><title>[iris_dri.so] (2 samples, 0.01%)</title><rect x="9.9774%" y="69" width="0.0119%" height="15" fill="rgb(240,68,47)" fg:x="1679" fg:w="2"/><text x="10.2274%" y="79.50"></text></g><g><title>[iris_dri.so] (17 samples, 0.10%)</title><rect x="9.8942%" y="213" width="0.1010%" height="15" fill="rgb(210,16,53)" fg:x="1665" fg:w="17"/><text x="10.1442%" y="223.50"></text></g><g><title>[iris_dri.so] (15 samples, 0.09%)</title><rect x="9.9061%" y="197" width="0.0891%" height="15" fill="rgb(235,124,12)" fg:x="1667" fg:w="15"/><text x="10.1561%" y="207.50"></text></g><g><title>[iris_dri.so] (15 samples, 0.09%)</title><rect x="9.9061%" y="181" width="0.0891%" height="15" fill="rgb(224,169,11)" fg:x="1667" fg:w="15"/><text x="10.1561%" y="191.50"></text></g><g><title>[libSDL2-2.0.so.0.2600.3] (21 samples, 0.12%)</title><rect x="9.8942%" y="229" width="0.1248%" height="15" fill="rgb(250,166,2)" fg:x="1665" fg:w="21"/><text x="10.1442%" y="239.50"></text></g><g><title>getenv (2 samples, 0.01%)</title><rect x="10.0071%" y="213" width="0.0119%" height="15" fill="rgb(242,216,29)" fg:x="1684" fg:w="2"/><text x="10.2571%" y="223.50"></text></g><g><title>&lt;riscv64_emu::device_vga::DeviceVGA as riscv64_emu::device_trait::DeviceBase&gt;::do_update (239 samples, 1.42%)</title><rect x="8.6047%" y="325" width="1.4203%" height="15" fill="rgb(230,116,27)" fg:x="1448" fg:w="239"/><text x="8.8547%" y="335.50"></text></g><g><title>riscv64_emu::device_vga::DeviceVGA::updata_vga (121 samples, 0.72%)</title><rect x="9.3059%" y="309" width="0.7190%" height="15" fill="rgb(228,99,48)" fg:x="1566" fg:w="121"/><text x="9.5559%" y="319.50"></text></g><g><title>sdl2::render::TextureCreator&lt;T&gt;::create_texture_target (22 samples, 0.13%)</title><rect x="9.8942%" y="293" width="0.1307%" height="15" fill="rgb(253,11,6)" fg:x="1665" fg:w="22"/><text x="10.1442%" y="303.50"></text></g><g><title>sdl2::render::TextureCreator&lt;T&gt;::create_texture (22 samples, 0.13%)</title><rect x="9.8942%" y="277" width="0.1307%" height="15" fill="rgb(247,143,39)" fg:x="1665" fg:w="22"/><text x="10.1442%" y="287.50"></text></g><g><title>sdl2::render::ll_create_texture (22 samples, 0.13%)</title><rect x="9.8942%" y="261" width="0.1307%" height="15" fill="rgb(236,97,10)" fg:x="1665" fg:w="22"/><text x="10.1442%" y="271.50"></text></g><g><title>[libSDL2-2.0.so.0.2600.3] (22 samples, 0.13%)</title><rect x="9.8942%" y="245" width="0.1307%" height="15" fill="rgb(233,208,19)" fg:x="1665" fg:w="22"/><text x="10.1442%" y="255.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (1,432 samples, 8.51%)</title><rect x="2.0086%" y="357" width="8.5096%" height="15" fill="rgb(216,164,2)" fg:x="338" fg:w="1432"/><text x="2.2586%" y="367.50">&lt;core::slice..</text></g><g><title>riscv64_emu::bus::Bus::update::{{closure}} (324 samples, 1.93%)</title><rect x="8.5928%" y="341" width="1.9254%" height="15" fill="rgb(220,129,5)" fg:x="1446" fg:w="324"/><text x="8.8428%" y="351.50">r..</text></g><g><title>core::ops::function::FnOnce::call_once (83 samples, 0.49%)</title><rect x="10.0250%" y="325" width="0.4932%" height="15" fill="rgb(242,17,10)" fg:x="1687" fg:w="83"/><text x="10.2750%" y="335.50"></text></g><g><title>riscv64_emu::inst_rv64i::INSTRUCTIONS_I::{{closure}} (83 samples, 0.49%)</title><rect x="10.0250%" y="309" width="0.4932%" height="15" fill="rgb(242,107,0)" fg:x="1687" fg:w="83"/><text x="10.2750%" y="319.50"></text></g><g><title>&lt;riscv64_emu::device_kb::DeviceKB as riscv64_emu::device_trait::DeviceBase&gt;::do_read (83 samples, 0.49%)</title><rect x="10.0250%" y="293" width="0.4932%" height="15" fill="rgb(251,28,31)" fg:x="1687" fg:w="83"/><text x="10.2750%" y="303.50"></text></g><g><title>riscv64_emu::device_kb::DeviceKB::get_sdl_key (83 samples, 0.49%)</title><rect x="10.0250%" y="277" width="0.4932%" height="15" fill="rgb(233,223,10)" fg:x="1687" fg:w="83"/><text x="10.2750%" y="287.50"></text></g><g><title>ring_channel::channel::RingReceiver&lt;T&gt;::try_recv (83 samples, 0.49%)</title><rect x="10.0250%" y="261" width="0.4932%" height="15" fill="rgb(215,21,27)" fg:x="1687" fg:w="83"/><text x="10.2750%" y="271.50"></text></g><g><title>ring_channel::buffer::RingBuffer&lt;T&gt;::pop (83 samples, 0.49%)</title><rect x="10.0250%" y="245" width="0.4932%" height="15" fill="rgb(232,23,21)" fg:x="1687" fg:w="83"/><text x="10.2750%" y="255.50"></text></g><g><title>&lt;riscv64_emu::device_vga::DeviceVGA as riscv64_emu::device_trait::DeviceBase&gt;::do_update (83 samples, 0.49%)</title><rect x="10.0250%" y="229" width="0.4932%" height="15" fill="rgb(244,5,23)" fg:x="1687" fg:w="83"/><text x="10.2750%" y="239.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (83 samples, 0.49%)</title><rect x="10.0250%" y="213" width="0.4932%" height="15" fill="rgb(226,81,46)" fg:x="1687" fg:w="83"/><text x="10.2750%" y="223.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::inner (83 samples, 0.49%)</title><rect x="10.0250%" y="197" width="0.4932%" height="15" fill="rgb(247,70,30)" fg:x="1687" fg:w="83"/><text x="10.2750%" y="207.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (83 samples, 0.49%)</title><rect x="10.0250%" y="181" width="0.4932%" height="15" fill="rgb(212,68,19)" fg:x="1687" fg:w="83"/><text x="10.2750%" y="191.50"></text></g><g><title>riscv64_emu::bus::Bus::update (1,433 samples, 8.52%)</title><rect x="2.0086%" y="373" width="8.5156%" height="15" fill="rgb(240,187,13)" fg:x="338" fg:w="1433"/><text x="2.2586%" y="383.50">riscv64_emu:..</text></g><g><title>riscv64_emu::clint::Clint::is_interrupt (137 samples, 0.81%)</title><rect x="10.5241%" y="373" width="0.8141%" height="15" fill="rgb(223,113,26)" fg:x="1771" fg:w="137"/><text x="10.7741%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (269 samples, 1.60%)</title><rect x="12.7228%" y="341" width="1.5985%" height="15" fill="rgb(206,192,2)" fg:x="2141" fg:w="269"/><text x="12.9728%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (269 samples, 1.60%)</title><rect x="12.7228%" y="325" width="1.5985%" height="15" fill="rgb(241,108,4)" fg:x="2141" fg:w="269"/><text x="12.9728%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (269 samples, 1.60%)</title><rect x="12.7228%" y="309" width="1.5985%" height="15" fill="rgb(247,173,49)" fg:x="2141" fg:w="269"/><text x="12.9728%" y="319.50"></text></g><g><title>&lt;riscv64_emu::csr_regs::BaseCSR as riscv64_emu::csr_regs::CsrRW&gt;::read_raw_mask (423 samples, 2.51%)</title><rect x="14.3214%" y="341" width="2.5137%" height="15" fill="rgb(224,114,35)" fg:x="2410" fg:w="423"/><text x="14.5714%" y="351.50">&lt;r..</text></g><g><title>riscv64_emu::inst_base::get_field (411 samples, 2.44%)</title><rect x="14.3927%" y="325" width="2.4424%" height="15" fill="rgb(245,159,27)" fg:x="2422" fg:w="411"/><text x="14.6427%" y="335.50">ri..</text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (408 samples, 2.42%)</title><rect x="14.4105%" y="309" width="2.4245%" height="15" fill="rgb(245,172,44)" fg:x="2425" fg:w="408"/><text x="14.6605%" y="319.50">co..</text></g><g><title>riscv64_emu::cpu_core::CpuCore::handle_interrupt (926 samples, 5.50%)</title><rect x="11.3382%" y="373" width="5.5027%" height="15" fill="rgb(236,23,11)" fg:x="1908" fg:w="926"/><text x="11.5882%" y="383.50">riscv64..</text></g><g><title>riscv64_emu::csr_regs::CsrRegs::read_raw_mask (804 samples, 4.78%)</title><rect x="12.0632%" y="357" width="4.7778%" height="15" fill="rgb(205,117,38)" fg:x="2030" fg:w="804"/><text x="12.3132%" y="367.50">riscv6..</text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (193 samples, 1.15%)</title><rect x="17.7799%" y="341" width="1.1469%" height="15" fill="rgb(237,72,25)" fg:x="2992" fg:w="193"/><text x="18.0299%" y="351.50"></text></g><g><title>ahash::operations::folded_multiply (183 samples, 1.09%)</title><rect x="18.9922%" y="277" width="1.0875%" height="15" fill="rgb(244,70,9)" fg:x="3196" fg:w="183"/><text x="19.2422%" y="287.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (162 samples, 0.96%)</title><rect x="19.1169%" y="261" width="0.9627%" height="15" fill="rgb(217,125,39)" fg:x="3217" fg:w="162"/><text x="19.3669%" y="271.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (357 samples, 2.12%)</title><rect x="18.9922%" y="293" width="2.1215%" height="15" fill="rgb(235,36,10)" fg:x="3196" fg:w="357"/><text x="19.2422%" y="303.50">&lt;..</text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (174 samples, 1.03%)</title><rect x="20.0796%" y="277" width="1.0340%" height="15" fill="rgb(251,123,47)" fg:x="3379" fg:w="174"/><text x="20.3296%" y="287.50"></text></g><g><title>hashbrown::map::make_hash (650 samples, 3.86%)</title><rect x="18.9922%" y="309" width="3.8626%" height="15" fill="rgb(221,13,13)" fg:x="3196" fg:w="650"/><text x="19.2422%" y="319.50">hash..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (293 samples, 1.74%)</title><rect x="21.1136%" y="293" width="1.7411%" height="15" fill="rgb(238,131,9)" fg:x="3553" fg:w="293"/><text x="21.3636%" y="303.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (293 samples, 1.74%)</title><rect x="21.1136%" y="277" width="1.7411%" height="15" fill="rgb(211,50,8)" fg:x="3553" fg:w="293"/><text x="21.3636%" y="287.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (293 samples, 1.74%)</title><rect x="21.1136%" y="261" width="1.7411%" height="15" fill="rgb(245,182,24)" fg:x="3553" fg:w="293"/><text x="21.3636%" y="271.50"></text></g><g><title>ahash::operations::folded_multiply (146 samples, 0.87%)</title><rect x="21.9872%" y="245" width="0.8676%" height="15" fill="rgb(242,14,37)" fg:x="3700" fg:w="146"/><text x="22.2372%" y="255.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (139 samples, 0.83%)</title><rect x="22.0288%" y="229" width="0.8260%" height="15" fill="rgb(246,228,12)" fg:x="3707" fg:w="139"/><text x="22.2788%" y="239.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (191 samples, 1.14%)</title><rect x="24.7088%" y="261" width="1.1350%" height="15" fill="rgb(213,55,15)" fg:x="4158" fg:w="191"/><text x="24.9588%" y="271.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (191 samples, 1.14%)</title><rect x="24.7088%" y="245" width="1.1350%" height="15" fill="rgb(209,9,3)" fg:x="4158" fg:w="191"/><text x="24.9588%" y="255.50"></text></g><g><title>hashbrown::raw::ProbeSeq::move_next (4 samples, 0.02%)</title><rect x="25.8438%" y="261" width="0.0238%" height="15" fill="rgb(230,59,30)" fg:x="4349" fg:w="4"/><text x="26.0938%" y="271.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (567 samples, 3.37%)</title><rect x="25.8676%" y="245" width="3.3694%" height="15" fill="rgb(209,121,21)" fg:x="4353" fg:w="567"/><text x="26.1176%" y="255.50">has..</text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (567 samples, 3.37%)</title><rect x="25.8676%" y="229" width="3.3694%" height="15" fill="rgb(220,109,13)" fg:x="4353" fg:w="567"/><text x="26.1176%" y="239.50">&lt;Q ..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (567 samples, 3.37%)</title><rect x="25.8676%" y="213" width="3.3694%" height="15" fill="rgb(232,18,1)" fg:x="4353" fg:w="567"/><text x="26.1176%" y="223.50">cor..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u64&gt;::eq (567 samples, 3.37%)</title><rect x="25.8676%" y="197" width="3.3694%" height="15" fill="rgb(215,41,42)" fg:x="4353" fg:w="567"/><text x="26.1176%" y="207.50">cor..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (737 samples, 4.38%)</title><rect x="25.8676%" y="261" width="4.3796%" height="15" fill="rgb(224,123,36)" fg:x="4353" fg:w="737"/><text x="26.1176%" y="271.50">hashb..</text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (170 samples, 1.01%)</title><rect x="29.2370%" y="245" width="1.0102%" height="15" fill="rgb(240,125,3)" fg:x="4920" fg:w="170"/><text x="29.4870%" y="255.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (170 samples, 1.01%)</title><rect x="29.2370%" y="229" width="1.0102%" height="15" fill="rgb(205,98,50)" fg:x="4920" fg:w="170"/><text x="29.4870%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (170 samples, 1.01%)</title><rect x="29.2370%" y="213" width="1.0102%" height="15" fill="rgb(205,185,37)" fg:x="4920" fg:w="170"/><text x="29.4870%" y="223.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (170 samples, 1.01%)</title><rect x="29.2370%" y="197" width="1.0102%" height="15" fill="rgb(238,207,15)" fg:x="4920" fg:w="170"/><text x="29.4870%" y="207.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (417 samples, 2.48%)</title><rect x="30.2472%" y="261" width="2.4780%" height="15" fill="rgb(213,199,42)" fg:x="5090" fg:w="417"/><text x="30.4972%" y="271.50">ha..</text></g><g><title>hashbrown::raw::h2 (2 samples, 0.01%)</title><rect x="32.7252%" y="261" width="0.0119%" height="15" fill="rgb(235,201,11)" fg:x="5507" fg:w="2"/><text x="32.9752%" y="271.50"></text></g><g><title>hashbrown::raw::likely (150 samples, 0.89%)</title><rect x="32.7371%" y="261" width="0.8914%" height="15" fill="rgb(207,46,11)" fg:x="5509" fg:w="150"/><text x="32.9871%" y="271.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (99 samples, 0.59%)</title><rect x="33.6285%" y="261" width="0.5883%" height="15" fill="rgb(241,35,35)" fg:x="5659" fg:w="99"/><text x="33.8785%" y="271.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (99 samples, 0.59%)</title><rect x="33.6285%" y="245" width="0.5883%" height="15" fill="rgb(243,32,47)" fg:x="5659" fg:w="99"/><text x="33.8785%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (99 samples, 0.59%)</title><rect x="33.6285%" y="229" width="0.5883%" height="15" fill="rgb(247,202,23)" fg:x="5659" fg:w="99"/><text x="33.8785%" y="239.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (208 samples, 1.24%)</title><rect x="34.2168%" y="261" width="1.2360%" height="15" fill="rgb(219,102,11)" fg:x="5758" fg:w="208"/><text x="34.4668%" y="271.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (208 samples, 1.24%)</title><rect x="34.2168%" y="245" width="1.2360%" height="15" fill="rgb(243,110,44)" fg:x="5758" fg:w="208"/><text x="34.4668%" y="255.50"></text></g><g><title>riscv64_emu::cpu_core::CpuCore::inst_fetch (3,133 samples, 18.62%)</title><rect x="16.8410%" y="373" width="18.6178%" height="15" fill="rgb(222,74,54)" fg:x="2834" fg:w="3133"/><text x="17.0910%" y="383.50">riscv64_emu::cpu_core::CpuCor..</text></g><g><title>riscv64_emu::cpu_icache::CpuIcache::get_inst (2,975 samples, 17.68%)</title><rect x="17.7799%" y="357" width="17.6789%" height="15" fill="rgb(216,99,12)" fg:x="2992" fg:w="2975"/><text x="18.0299%" y="367.50">riscv64_emu::cpu_icache::Cp..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2,782 samples, 16.53%)</title><rect x="18.9268%" y="341" width="16.5320%" height="15" fill="rgb(226,22,26)" fg:x="3185" fg:w="2782"/><text x="19.1768%" y="351.50">hashbrown::map::HashMap&lt;K,..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2,782 samples, 16.53%)</title><rect x="18.9268%" y="325" width="16.5320%" height="15" fill="rgb(217,163,10)" fg:x="3185" fg:w="2782"/><text x="19.1768%" y="335.50">hashbrown::map::HashMap&lt;K,..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2,121 samples, 12.60%)</title><rect x="22.8548%" y="309" width="12.6040%" height="15" fill="rgb(213,25,53)" fg:x="3846" fg:w="2121"/><text x="23.1048%" y="319.50">hashbrown::raw::Raw..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2,121 samples, 12.60%)</title><rect x="22.8548%" y="293" width="12.6040%" height="15" fill="rgb(252,105,26)" fg:x="3846" fg:w="2121"/><text x="23.1048%" y="303.50">hashbrown::raw::Raw..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2,121 samples, 12.60%)</title><rect x="22.8548%" y="277" width="12.6040%" height="15" fill="rgb(220,39,43)" fg:x="3846" fg:w="2121"/><text x="23.1048%" y="287.50">hashbrown::raw::Raw..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (35 samples, 0.21%)</title><rect x="38.7865%" y="309" width="0.2080%" height="15" fill="rgb(229,68,48)" fg:x="6527" fg:w="35"/><text x="39.0365%" y="319.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (35 samples, 0.21%)</title><rect x="38.7865%" y="293" width="0.2080%" height="15" fill="rgb(252,8,32)" fg:x="6527" fg:w="35"/><text x="39.0365%" y="303.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (35 samples, 0.21%)</title><rect x="38.7865%" y="277" width="0.2080%" height="15" fill="rgb(223,20,43)" fg:x="6527" fg:w="35"/><text x="39.0365%" y="287.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (35 samples, 0.21%)</title><rect x="38.7865%" y="261" width="0.2080%" height="15" fill="rgb(229,81,49)" fg:x="6527" fg:w="35"/><text x="39.0365%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (35 samples, 0.21%)</title><rect x="38.7865%" y="245" width="0.2080%" height="15" fill="rgb(236,28,36)" fg:x="6527" fg:w="35"/><text x="39.0365%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (35 samples, 0.21%)</title><rect x="38.7865%" y="229" width="0.2080%" height="15" fill="rgb(249,185,26)" fg:x="6527" fg:w="35"/><text x="39.0365%" y="239.50"></text></g><g><title>&lt;riscv64_emu::device_dram::DeviceDram as riscv64_emu::device_trait::DeviceBase&gt;::do_read (252 samples, 1.50%)</title><rect x="38.1269%" y="325" width="1.4975%" height="15" fill="rgb(249,174,33)" fg:x="6416" fg:w="252"/><text x="38.3769%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (106 samples, 0.63%)</title><rect x="38.9945%" y="309" width="0.6299%" height="15" fill="rgb(233,201,37)" fg:x="6562" fg:w="106"/><text x="39.2445%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (106 samples, 0.63%)</title><rect x="38.9945%" y="293" width="0.6299%" height="15" fill="rgb(221,78,26)" fg:x="6562" fg:w="106"/><text x="39.2445%" y="303.50"></text></g><g><title>[libc.so.6] (106 samples, 0.63%)</title><rect x="38.9945%" y="277" width="0.6299%" height="15" fill="rgb(250,127,30)" fg:x="6562" fg:w="106"/><text x="39.2445%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (28 samples, 0.17%)</title><rect x="39.6244%" y="309" width="0.1664%" height="15" fill="rgb(230,49,44)" fg:x="6668" fg:w="28"/><text x="39.8744%" y="319.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (25 samples, 0.15%)</title><rect x="39.6423%" y="293" width="0.1486%" height="15" fill="rgb(229,67,23)" fg:x="6671" fg:w="25"/><text x="39.8923%" y="303.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (25 samples, 0.15%)</title><rect x="39.6423%" y="277" width="0.1486%" height="15" fill="rgb(249,83,47)" fg:x="6671" fg:w="25"/><text x="39.8923%" y="287.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (14 samples, 0.08%)</title><rect x="39.7076%" y="261" width="0.0832%" height="15" fill="rgb(215,43,3)" fg:x="6682" fg:w="14"/><text x="39.9576%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (14 samples, 0.08%)</title><rect x="39.7076%" y="245" width="0.0832%" height="15" fill="rgb(238,154,13)" fg:x="6682" fg:w="14"/><text x="39.9576%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (14 samples, 0.08%)</title><rect x="39.7076%" y="229" width="0.0832%" height="15" fill="rgb(219,56,2)" fg:x="6682" fg:w="14"/><text x="39.9576%" y="239.50"></text></g><g><title>core::num::&lt;impl u64&gt;::to_le_bytes (6 samples, 0.04%)</title><rect x="39.7908%" y="309" width="0.0357%" height="15" fill="rgb(233,0,4)" fg:x="6696" fg:w="6"/><text x="40.0408%" y="319.50"></text></g><g><title>core::num::&lt;impl u64&gt;::to_ne_bytes (6 samples, 0.04%)</title><rect x="39.7908%" y="293" width="0.0357%" height="15" fill="rgb(235,30,7)" fg:x="6696" fg:w="6"/><text x="40.0408%" y="303.50"></text></g><g><title>&lt;riscv64_emu::device_dram::DeviceDram as riscv64_emu::device_trait::DeviceBase&gt;::do_write (53 samples, 0.31%)</title><rect x="39.6244%" y="325" width="0.3150%" height="15" fill="rgb(250,79,13)" fg:x="6668" fg:w="53"/><text x="39.8744%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (19 samples, 0.11%)</title><rect x="39.8265%" y="309" width="0.1129%" height="15" fill="rgb(211,146,34)" fg:x="6702" fg:w="19"/><text x="40.0765%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (19 samples, 0.11%)</title><rect x="39.8265%" y="293" width="0.1129%" height="15" fill="rgb(228,22,38)" fg:x="6702" fg:w="19"/><text x="40.0765%" y="303.50"></text></g><g><title>[libc.so.6] (19 samples, 0.11%)</title><rect x="39.8265%" y="277" width="0.1129%" height="15" fill="rgb(235,168,5)" fg:x="6702" fg:w="19"/><text x="40.0765%" y="287.50"></text></g><g><title>&lt;riscv64_emu::device_vga::DeviceVGA as riscv64_emu::device_trait::DeviceBase&gt;::do_write (27 samples, 0.16%)</title><rect x="39.9453%" y="325" width="0.1604%" height="15" fill="rgb(221,155,16)" fg:x="6722" fg:w="27"/><text x="40.1953%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (15 samples, 0.09%)</title><rect x="40.0166%" y="309" width="0.0891%" height="15" fill="rgb(215,215,53)" fg:x="6734" fg:w="15"/><text x="40.2666%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15 samples, 0.09%)</title><rect x="40.0166%" y="293" width="0.0891%" height="15" fill="rgb(223,4,10)" fg:x="6734" fg:w="15"/><text x="40.2666%" y="303.50"></text></g><g><title>[libc.so.6] (15 samples, 0.09%)</title><rect x="40.0166%" y="277" width="0.0891%" height="15" fill="rgb(234,103,6)" fg:x="6734" fg:w="15"/><text x="40.2666%" y="287.50"></text></g><g><title>core::num::&lt;impl i64&gt;::wrapping_add (9 samples, 0.05%)</title><rect x="40.1117%" y="325" width="0.0535%" height="15" fill="rgb(227,97,0)" fg:x="6750" fg:w="9"/><text x="40.3617%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (10 samples, 0.06%)</title><rect x="40.1652%" y="325" width="0.0594%" height="15" fill="rgb(234,150,53)" fg:x="6759" fg:w="10"/><text x="40.4152%" y="335.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (83 samples, 0.49%)</title><rect x="40.2246%" y="309" width="0.4932%" height="15" fill="rgb(228,201,54)" fg:x="6769" fg:w="83"/><text x="40.4746%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (54 samples, 0.32%)</title><rect x="40.7179%" y="309" width="0.3209%" height="15" fill="rgb(222,22,37)" fg:x="6852" fg:w="54"/><text x="40.9679%" y="319.50"></text></g><g><title>riscv64_emu::bus::Bus::read::{{closure}} (54 samples, 0.32%)</title><rect x="40.7179%" y="293" width="0.3209%" height="15" fill="rgb(237,53,32)" fg:x="6852" fg:w="54"/><text x="40.9679%" y="303.50"></text></g><g><title>riscv64_emu::bus::Bus::read (168 samples, 1.00%)</title><rect x="40.2246%" y="325" width="0.9983%" height="15" fill="rgb(233,25,53)" fg:x="6769" fg:w="168"/><text x="40.4746%" y="335.50"></text></g><g><title>riscv64_emu::bus::Bus::check_aligned (31 samples, 0.18%)</title><rect x="41.0387%" y="309" width="0.1842%" height="15" fill="rgb(210,40,34)" fg:x="6906" fg:w="31"/><text x="41.2887%" y="319.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.05%)</title><rect x="41.6092%" y="293" width="0.0535%" height="15" fill="rgb(241,220,44)" fg:x="7002" fg:w="9"/><text x="41.8592%" y="303.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (81 samples, 0.48%)</title><rect x="41.2348%" y="309" width="0.4813%" height="15" fill="rgb(235,28,35)" fg:x="6939" fg:w="81"/><text x="41.4848%" y="319.50"></text></g><g><title>riscv64_emu::bus::Bus::write::{{closure}} (9 samples, 0.05%)</title><rect x="41.6627%" y="293" width="0.0535%" height="15" fill="rgb(210,56,17)" fg:x="7011" fg:w="9"/><text x="41.9127%" y="303.50"></text></g><g><title>riscv64_emu::bus::Bus::check_area (9 samples, 0.05%)</title><rect x="41.6627%" y="277" width="0.0535%" height="15" fill="rgb(224,130,29)" fg:x="7011" fg:w="9"/><text x="41.9127%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (29 samples, 0.17%)</title><rect x="41.7162%" y="309" width="0.1723%" height="15" fill="rgb(235,212,8)" fg:x="7020" fg:w="29"/><text x="41.9662%" y="319.50"></text></g><g><title>riscv64_emu::bus::Bus::write::{{closure}} (29 samples, 0.17%)</title><rect x="41.7162%" y="293" width="0.1723%" height="15" fill="rgb(223,33,50)" fg:x="7020" fg:w="29"/><text x="41.9662%" y="303.50"></text></g><g><title>riscv64_emu::bus::Bus::write (133 samples, 0.79%)</title><rect x="41.2230%" y="325" width="0.7903%" height="15" fill="rgb(219,149,13)" fg:x="6937" fg:w="133"/><text x="41.4730%" y="335.50"></text></g><g><title>riscv64_emu::bus::Bus::check_aligned (21 samples, 0.12%)</title><rect x="41.8885%" y="309" width="0.1248%" height="15" fill="rgb(250,156,29)" fg:x="7049" fg:w="21"/><text x="42.1385%" y="319.50"></text></g><g><title>riscv64_emu::gpr::Gpr::read (225 samples, 1.34%)</title><rect x="42.0133%" y="325" width="1.3371%" height="15" fill="rgb(216,193,19)" fg:x="7070" fg:w="225"/><text x="42.2633%" y="335.50"></text></g><g><title>riscv64_emu::gpr::Gpr::write (42 samples, 0.25%)</title><rect x="43.3504%" y="325" width="0.2496%" height="15" fill="rgb(216,135,14)" fg:x="7295" fg:w="42"/><text x="43.6004%" y="335.50"></text></g><g><title>riscv64_emu::inst_base::parse_format_b (108 samples, 0.64%)</title><rect x="43.6000%" y="325" width="0.6418%" height="15" fill="rgb(241,47,5)" fg:x="7337" fg:w="108"/><text x="43.8500%" y="335.50"></text></g><g><title>riscv64_emu::inst_base::parse_format_i (206 samples, 1.22%)</title><rect x="44.2417%" y="325" width="1.2242%" height="15" fill="rgb(233,42,35)" fg:x="7445" fg:w="206"/><text x="44.4917%" y="335.50"></text></g><g><title>riscv64_emu::inst_base::parse_format_j (14 samples, 0.08%)</title><rect x="45.4659%" y="325" width="0.0832%" height="15" fill="rgb(231,13,6)" fg:x="7651" fg:w="14"/><text x="45.7159%" y="335.50"></text></g><g><title>riscv64_emu::inst_base::parse_format_r (41 samples, 0.24%)</title><rect x="45.5491%" y="325" width="0.2436%" height="15" fill="rgb(207,181,40)" fg:x="7665" fg:w="41"/><text x="45.7991%" y="335.50"></text></g><g><title>riscv64_emu::inst_base::parse_format_s (47 samples, 0.28%)</title><rect x="45.7927%" y="325" width="0.2793%" height="15" fill="rgb(254,173,49)" fg:x="7706" fg:w="47"/><text x="46.0427%" y="335.50"></text></g><g><title>riscv64_emu::inst_rv64i::INSTRUCTIONS_I::{{closure}} (1,602 samples, 9.52%)</title><rect x="36.6710%" y="341" width="9.5198%" height="15" fill="rgb(221,1,38)" fg:x="6171" fg:w="1602"/><text x="36.9210%" y="351.50">riscv64_emu::i..</text></g><g><title>riscv64_emu::inst_base::parse_format_u (20 samples, 0.12%)</title><rect x="46.0720%" y="325" width="0.1188%" height="15" fill="rgb(206,124,46)" fg:x="7753" fg:w="20"/><text x="46.3220%" y="335.50"></text></g><g><title>riscv64_emu::gpr::Gpr::read (3 samples, 0.02%)</title><rect x="46.2206%" y="325" width="0.0178%" height="15" fill="rgb(249,21,11)" fg:x="7778" fg:w="3"/><text x="46.4706%" y="335.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,679 samples, 9.98%)</title><rect x="36.2907%" y="357" width="9.9774%" height="15" fill="rgb(222,201,40)" fg:x="6107" fg:w="1679"/><text x="36.5407%" y="367.50">core::ops::fun..</text></g><g><title>riscv64_emu::inst_rv64m::INSTRUCTIONS_M::{{closure}} (13 samples, 0.08%)</title><rect x="46.1909%" y="341" width="0.0773%" height="15" fill="rgb(235,61,29)" fg:x="7773" fg:w="13"/><text x="46.4409%" y="351.50"></text></g><g><title>riscv64_emu::inst_base::parse_format_r (5 samples, 0.03%)</title><rect x="46.2384%" y="325" width="0.0297%" height="15" fill="rgb(219,207,3)" fg:x="7781" fg:w="5"/><text x="46.4884%" y="335.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (194 samples, 1.15%)</title><rect x="46.2681%" y="341" width="1.1528%" height="15" fill="rgb(222,56,46)" fg:x="7786" fg:w="194"/><text x="46.5181%" y="351.50"></text></g><g><title>ahash::operations::folded_multiply (203 samples, 1.21%)</title><rect x="48.2470%" y="261" width="1.2063%" height="15" fill="rgb(239,76,54)" fg:x="8119" fg:w="203"/><text x="48.4970%" y="271.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (191 samples, 1.14%)</title><rect x="48.3183%" y="245" width="1.1350%" height="15" fill="rgb(231,124,27)" fg:x="8131" fg:w="191"/><text x="48.5683%" y="255.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (257 samples, 1.53%)</title><rect x="48.2470%" y="277" width="1.5272%" height="15" fill="rgb(249,195,6)" fg:x="8119" fg:w="257"/><text x="48.4970%" y="287.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (54 samples, 0.32%)</title><rect x="49.4533%" y="261" width="0.3209%" height="15" fill="rgb(237,174,47)" fg:x="8322" fg:w="54"/><text x="49.7033%" y="271.50"></text></g><g><title>hashbrown::map::make_hash (606 samples, 3.60%)</title><rect x="48.2470%" y="293" width="3.6011%" height="15" fill="rgb(206,201,31)" fg:x="8119" fg:w="606"/><text x="48.4970%" y="303.50">hash..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (349 samples, 2.07%)</title><rect x="49.7742%" y="277" width="2.0739%" height="15" fill="rgb(231,57,52)" fg:x="8376" fg:w="349"/><text x="50.0242%" y="287.50">c..</text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u32 (349 samples, 2.07%)</title><rect x="49.7742%" y="261" width="2.0739%" height="15" fill="rgb(248,177,22)" fg:x="8376" fg:w="349"/><text x="50.0242%" y="271.50">&lt;..</text></g><g><title>ahash::fallback_hash::AHasher::update (349 samples, 2.07%)</title><rect x="49.7742%" y="245" width="2.0739%" height="15" fill="rgb(215,211,37)" fg:x="8376" fg:w="349"/><text x="50.0242%" y="255.50">a..</text></g><g><title>ahash::operations::folded_multiply (337 samples, 2.00%)</title><rect x="49.8455%" y="229" width="2.0026%" height="15" fill="rgb(241,128,51)" fg:x="8388" fg:w="337"/><text x="50.0955%" y="239.50">a..</text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (169 samples, 1.00%)</title><rect x="50.8438%" y="213" width="1.0043%" height="15" fill="rgb(227,165,31)" fg:x="8556" fg:w="169"/><text x="51.0938%" y="223.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (338 samples, 2.01%)</title><rect x="52.0680%" y="245" width="2.0086%" height="15" fill="rgb(228,167,24)" fg:x="8762" fg:w="338"/><text x="52.3180%" y="255.50">&lt;..</text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (202 samples, 1.20%)</title><rect x="52.8762%" y="229" width="1.2004%" height="15" fill="rgb(228,143,12)" fg:x="8898" fg:w="202"/><text x="53.1262%" y="239.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (564 samples, 3.35%)</title><rect x="54.0825%" y="229" width="3.3516%" height="15" fill="rgb(249,149,8)" fg:x="9101" fg:w="564"/><text x="54.3325%" y="239.50">has..</text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (564 samples, 3.35%)</title><rect x="54.0825%" y="213" width="3.3516%" height="15" fill="rgb(243,35,44)" fg:x="9101" fg:w="564"/><text x="54.3325%" y="223.50">&lt;Q ..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (564 samples, 3.35%)</title><rect x="54.0825%" y="197" width="3.3516%" height="15" fill="rgb(246,89,9)" fg:x="9101" fg:w="564"/><text x="54.3325%" y="207.50">cor..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (564 samples, 3.35%)</title><rect x="54.0825%" y="181" width="3.3516%" height="15" fill="rgb(233,213,13)" fg:x="9101" fg:w="564"/><text x="54.3325%" y="191.50">cor..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (747 samples, 4.44%)</title><rect x="54.0825%" y="245" width="4.4390%" height="15" fill="rgb(233,141,41)" fg:x="9101" fg:w="747"/><text x="54.3325%" y="255.50">hashb..</text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (183 samples, 1.09%)</title><rect x="57.4340%" y="229" width="1.0875%" height="15" fill="rgb(239,167,4)" fg:x="9665" fg:w="183"/><text x="57.6840%" y="239.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (183 samples, 1.09%)</title><rect x="57.4340%" y="213" width="1.0875%" height="15" fill="rgb(209,217,16)" fg:x="9665" fg:w="183"/><text x="57.6840%" y="223.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (183 samples, 1.09%)</title><rect x="57.4340%" y="197" width="1.0875%" height="15" fill="rgb(219,88,35)" fg:x="9665" fg:w="183"/><text x="57.6840%" y="207.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (183 samples, 1.09%)</title><rect x="57.4340%" y="181" width="1.0875%" height="15" fill="rgb(220,193,23)" fg:x="9665" fg:w="183"/><text x="57.6840%" y="191.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (381 samples, 2.26%)</title><rect x="58.5215%" y="245" width="2.2641%" height="15" fill="rgb(230,90,52)" fg:x="9848" fg:w="381"/><text x="58.7715%" y="255.50">h..</text></g><g><title>hashbrown::raw::h2 (153 samples, 0.91%)</title><rect x="60.7856%" y="245" width="0.9092%" height="15" fill="rgb(252,106,19)" fg:x="10229" fg:w="153"/><text x="61.0356%" y="255.50"></text></g><g><title>hashbrown::raw::likely (171 samples, 1.02%)</title><rect x="61.6948%" y="245" width="1.0162%" height="15" fill="rgb(206,74,20)" fg:x="10382" fg:w="171"/><text x="61.9448%" y="255.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (119 samples, 0.71%)</title><rect x="62.7110%" y="245" width="0.7072%" height="15" fill="rgb(230,138,44)" fg:x="10553" fg:w="119"/><text x="62.9610%" y="255.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (119 samples, 0.71%)</title><rect x="62.7110%" y="229" width="0.7072%" height="15" fill="rgb(235,182,43)" fg:x="10553" fg:w="119"/><text x="62.9610%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (119 samples, 0.71%)</title><rect x="62.7110%" y="213" width="0.7072%" height="15" fill="rgb(242,16,51)" fg:x="10553" fg:w="119"/><text x="62.9610%" y="223.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (226 samples, 1.34%)</title><rect x="63.4181%" y="245" width="1.3430%" height="15" fill="rgb(248,9,4)" fg:x="10672" fg:w="226"/><text x="63.6681%" y="255.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (226 samples, 1.34%)</title><rect x="63.4181%" y="229" width="1.3430%" height="15" fill="rgb(210,31,22)" fg:x="10672" fg:w="226"/><text x="63.6681%" y="239.50"></text></g><g><title>riscv64_emu::inst_decode::InstDecode::fast_path (3,114 samples, 18.50%)</title><rect x="46.2681%" y="357" width="18.5049%" height="15" fill="rgb(239,54,39)" fg:x="7786" fg:w="3114"/><text x="46.5181%" y="367.50">riscv64_emu::inst_decode::Ins..</text></g><g><title>riscv64_emu::inst_decode::InstDecode::hash_get (2,920 samples, 17.35%)</title><rect x="47.4210%" y="341" width="17.3520%" height="15" fill="rgb(230,99,41)" fg:x="7980" fg:w="2920"/><text x="47.6710%" y="351.50">riscv64_emu::inst_decode::I..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2,920 samples, 17.35%)</title><rect x="47.4210%" y="325" width="17.3520%" height="15" fill="rgb(253,106,12)" fg:x="7980" fg:w="2920"/><text x="47.6710%" y="335.50">hashbrown::map::HashMap&lt;K,V..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2,920 samples, 17.35%)</title><rect x="47.4210%" y="309" width="17.3520%" height="15" fill="rgb(213,46,41)" fg:x="7980" fg:w="2920"/><text x="47.6710%" y="319.50">hashbrown::map::HashMap&lt;K,V..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2,175 samples, 12.92%)</title><rect x="51.8481%" y="293" width="12.9249%" height="15" fill="rgb(215,133,35)" fg:x="8725" fg:w="2175"/><text x="52.0981%" y="303.50">hashbrown::raw::Raw..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2,175 samples, 12.92%)</title><rect x="51.8481%" y="277" width="12.9249%" height="15" fill="rgb(213,28,5)" fg:x="8725" fg:w="2175"/><text x="52.0981%" y="287.50">hashbrown::raw::Raw..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2,175 samples, 12.92%)</title><rect x="51.8481%" y="261" width="12.9249%" height="15" fill="rgb(215,77,49)" fg:x="8725" fg:w="2175"/><text x="52.0981%" y="271.50">hashbrown::raw::Raw..</text></g><g><title>hashbrown::raw::sse2::Group::match_empty (2 samples, 0.01%)</title><rect x="64.7611%" y="245" width="0.0119%" height="15" fill="rgb(248,100,22)" fg:x="10898" fg:w="2"/><text x="65.0111%" y="255.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.01%)</title><rect x="64.7611%" y="229" width="0.0119%" height="15" fill="rgb(208,67,9)" fg:x="10898" fg:w="2"/><text x="65.0111%" y="239.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.01%)</title><rect x="64.7611%" y="213" width="0.0119%" height="15" fill="rgb(219,133,21)" fg:x="10898" fg:w="2"/><text x="65.0111%" y="223.50"></text></g><g><title>riscv64_emu::cpu_core::CpuCore::step (4,934 samples, 29.32%)</title><rect x="35.4588%" y="373" width="29.3202%" height="15" fill="rgb(246,46,29)" fg:x="5967" fg:w="4934"/><text x="35.7088%" y="383.50">riscv64_emu::cpu_core::CpuCore::step</text></g><g><title>[libc.so.6] (11,450 samples, 68.04%)</title><rect x="0.2674%" y="613" width="68.0414%" height="15" fill="rgb(246,185,52)" fg:x="45" fg:w="11450"/><text x="0.5174%" y="623.50">[libc.so.6]</text></g><g><title>[libc.so.6] (11,450 samples, 68.04%)</title><rect x="0.2674%" y="597" width="68.0414%" height="15" fill="rgb(252,136,11)" fg:x="45" fg:w="11450"/><text x="0.5174%" y="607.50">[libc.so.6]</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (11,450 samples, 68.04%)</title><rect x="0.2674%" y="581" width="68.0414%" height="15" fill="rgb(219,138,53)" fg:x="45" fg:w="11450"/><text x="0.5174%" y="591.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (11,450 samples, 68.04%)</title><rect x="0.2674%" y="565" width="68.0414%" height="15" fill="rgb(211,51,23)" fg:x="45" fg:w="11450"/><text x="0.5174%" y="575.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (11,450 samples, 68.04%)</title><rect x="0.2674%" y="549" width="68.0414%" height="15" fill="rgb(247,221,28)" fg:x="45" fg:w="11450"/><text x="0.5174%" y="559.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (11,450 samples, 68.04%)</title><rect x="0.2674%" y="533" width="68.0414%" height="15" fill="rgb(251,222,45)" fg:x="45" fg:w="11450"/><text x="0.5174%" y="543.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (11,450 samples, 68.04%)</title><rect x="0.2674%" y="517" width="68.0414%" height="15" fill="rgb(217,162,53)" fg:x="45" fg:w="11450"/><text x="0.5174%" y="527.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::panic::catch_unwind (11,450 samples, 68.04%)</title><rect x="0.2674%" y="501" width="68.0414%" height="15" fill="rgb(229,93,14)" fg:x="45" fg:w="11450"/><text x="0.5174%" y="511.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (11,450 samples, 68.04%)</title><rect x="0.2674%" y="485" width="68.0414%" height="15" fill="rgb(209,67,49)" fg:x="45" fg:w="11450"/><text x="0.5174%" y="495.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (11,450 samples, 68.04%)</title><rect x="0.2674%" y="469" width="68.0414%" height="15" fill="rgb(213,87,29)" fg:x="45" fg:w="11450"/><text x="0.5174%" y="479.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (11,450 samples, 68.04%)</title><rect x="0.2674%" y="453" width="68.0414%" height="15" fill="rgb(205,151,52)" fg:x="45" fg:w="11450"/><text x="0.5174%" y="463.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (11,450 samples, 68.04%)</title><rect x="0.2674%" y="437" width="68.0414%" height="15" fill="rgb(253,215,39)" fg:x="45" fg:w="11450"/><text x="0.5174%" y="447.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (11,450 samples, 68.04%)</title><rect x="0.2674%" y="421" width="68.0414%" height="15" fill="rgb(221,220,41)" fg:x="45" fg:w="11450"/><text x="0.5174%" y="431.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>riscv64_emu::main::{{closure}} (11,450 samples, 68.04%)</title><rect x="0.2674%" y="405" width="68.0414%" height="15" fill="rgb(218,133,21)" fg:x="45" fg:w="11450"/><text x="0.5174%" y="415.50">riscv64_emu::main::{{closure}}</text></g><g><title>riscv64_emu::cpu_core::CpuCore::execute (11,170 samples, 66.38%)</title><rect x="1.9313%" y="389" width="66.3775%" height="15" fill="rgb(221,193,43)" fg:x="325" fg:w="11170"/><text x="2.1813%" y="399.50">riscv64_emu::cpu_core::CpuCore::execute</text></g><g><title>riscv64_emu::csr_regs::CsrRegs::write_raw_mask (594 samples, 3.53%)</title><rect x="64.7789%" y="373" width="3.5298%" height="15" fill="rgb(240,128,52)" fg:x="10901" fg:w="594"/><text x="65.0289%" y="383.50">ris..</text></g><g><title>&lt;riscv64_emu::csr_regs::BaseCSR as riscv64_emu::csr_regs::CsrRW&gt;::write_raw_mask (431 samples, 2.56%)</title><rect x="65.7476%" y="357" width="2.5612%" height="15" fill="rgb(253,114,12)" fg:x="11064" fg:w="431"/><text x="65.9976%" y="367.50">&lt;r..</text></g><g><title>riscv64_emu::inst_base::set_field (418 samples, 2.48%)</title><rect x="65.8248%" y="341" width="2.4840%" height="15" fill="rgb(215,223,47)" fg:x="11077" fg:w="418"/><text x="66.0748%" y="351.50">ri..</text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (289 samples, 1.72%)</title><rect x="66.5914%" y="325" width="1.7174%" height="15" fill="rgb(248,225,23)" fg:x="11206" fg:w="289"/><text x="66.8414%" y="335.50"></text></g><g><title>[libglapi.so.0.0.0] (2 samples, 0.01%)</title><rect x="68.3088%" y="613" width="0.0119%" height="15" fill="rgb(250,108,0)" fg:x="11495" fg:w="2"/><text x="68.5588%" y="623.50"></text></g><g><title>&lt;riscv64_emu::device_kb::DeviceKB as riscv64_emu::device_trait::DeviceBase&gt;::do_read (29 samples, 0.17%)</title><rect x="68.3207%" y="597" width="0.1723%" height="15" fill="rgb(228,208,7)" fg:x="11497" fg:w="29"/><text x="68.5707%" y="607.50"></text></g><g><title>riscv64_emu::device_kb::DeviceKB::get_sdl_key (29 samples, 0.17%)</title><rect x="68.3207%" y="581" width="0.1723%" height="15" fill="rgb(244,45,10)" fg:x="11497" fg:w="29"/><text x="68.5707%" y="591.50"></text></g><g><title>ring_channel::channel::RingReceiver&lt;T&gt;::try_recv (29 samples, 0.17%)</title><rect x="68.3207%" y="565" width="0.1723%" height="15" fill="rgb(207,125,25)" fg:x="11497" fg:w="29"/><text x="68.5707%" y="575.50"></text></g><g><title>ring_channel::buffer::RingBuffer&lt;T&gt;::pop (29 samples, 0.17%)</title><rect x="68.3207%" y="549" width="0.1723%" height="15" fill="rgb(210,195,18)" fg:x="11497" fg:w="29"/><text x="68.5707%" y="559.50"></text></g><g><title>&lt;riscv64_emu::device_vga::DeviceVGA as riscv64_emu::device_trait::DeviceBase&gt;::do_update (29 samples, 0.17%)</title><rect x="68.3207%" y="533" width="0.1723%" height="15" fill="rgb(249,80,12)" fg:x="11497" fg:w="29"/><text x="68.5707%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (29 samples, 0.17%)</title><rect x="68.3207%" y="517" width="0.1723%" height="15" fill="rgb(221,65,9)" fg:x="11497" fg:w="29"/><text x="68.5707%" y="527.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::inner (29 samples, 0.17%)</title><rect x="68.3207%" y="501" width="0.1723%" height="15" fill="rgb(235,49,36)" fg:x="11497" fg:w="29"/><text x="68.5707%" y="511.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (29 samples, 0.17%)</title><rect x="68.3207%" y="485" width="0.1723%" height="15" fill="rgb(225,32,20)" fg:x="11497" fg:w="29"/><text x="68.5707%" y="495.50"></text></g><g><title>[riscv64-emu] (34 samples, 0.20%)</title><rect x="68.3207%" y="613" width="0.2020%" height="15" fill="rgb(215,141,46)" fg:x="11497" fg:w="34"/><text x="68.5707%" y="623.50"></text></g><g><title>&lt;riscv64_emu::device_vga::DeviceVGA as riscv64_emu::device_trait::DeviceBase&gt;::do_write (5 samples, 0.03%)</title><rect x="68.4930%" y="597" width="0.0297%" height="15" fill="rgb(250,160,47)" fg:x="11526" fg:w="5"/><text x="68.7430%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (5 samples, 0.03%)</title><rect x="68.4930%" y="581" width="0.0297%" height="15" fill="rgb(216,222,40)" fg:x="11526" fg:w="5"/><text x="68.7430%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.03%)</title><rect x="68.4930%" y="565" width="0.0297%" height="15" fill="rgb(234,217,39)" fg:x="11526" fg:w="5"/><text x="68.7430%" y="575.50"></text></g><g><title>&lt;riscv64_emu::csr_regs::BaseCSR as riscv64_emu::csr_regs::CsrRW&gt;::read_raw_mask (373 samples, 2.22%)</title><rect x="68.5643%" y="597" width="2.2165%" height="15" fill="rgb(207,178,40)" fg:x="11538" fg:w="373"/><text x="68.8143%" y="607.50">&lt;..</text></g><g><title>&lt;riscv64_emu::csr_regs::BaseCSR as riscv64_emu::csr_regs::CsrRW&gt;::write_raw_mask (121 samples, 0.72%)</title><rect x="70.7808%" y="597" width="0.7190%" height="15" fill="rgb(221,136,13)" fg:x="11911" fg:w="121"/><text x="71.0308%" y="607.50"></text></g><g><title>&lt;riscv64_emu::device_dram::DeviceDram as riscv64_emu::device_trait::DeviceBase&gt;::do_read (50 samples, 0.30%)</title><rect x="71.4999%" y="597" width="0.2971%" height="15" fill="rgb(249,199,10)" fg:x="12032" fg:w="50"/><text x="71.7499%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (28 samples, 0.17%)</title><rect x="71.6306%" y="581" width="0.1664%" height="15" fill="rgb(249,222,13)" fg:x="12054" fg:w="28"/><text x="71.8806%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (28 samples, 0.17%)</title><rect x="71.6306%" y="565" width="0.1664%" height="15" fill="rgb(244,185,38)" fg:x="12054" fg:w="28"/><text x="71.8806%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::to_le_bytes (2 samples, 0.01%)</title><rect x="71.8802%" y="581" width="0.0119%" height="15" fill="rgb(236,202,9)" fg:x="12096" fg:w="2"/><text x="72.1302%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::to_ne_bytes (2 samples, 0.01%)</title><rect x="71.8802%" y="565" width="0.0119%" height="15" fill="rgb(250,229,37)" fg:x="12096" fg:w="2"/><text x="72.1302%" y="575.50"></text></g><g><title>&lt;riscv64_emu::device_dram::DeviceDram as riscv64_emu::device_trait::DeviceBase&gt;::do_write (32 samples, 0.19%)</title><rect x="71.7970%" y="597" width="0.1902%" height="15" fill="rgb(206,174,23)" fg:x="12082" fg:w="32"/><text x="72.0470%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (16 samples, 0.10%)</title><rect x="71.8921%" y="581" width="0.0951%" height="15" fill="rgb(211,33,43)" fg:x="12098" fg:w="16"/><text x="72.1421%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (16 samples, 0.10%)</title><rect x="71.8921%" y="565" width="0.0951%" height="15" fill="rgb(245,58,50)" fg:x="12098" fg:w="16"/><text x="72.1421%" y="575.50"></text></g><g><title>&lt;riscv64_emu::device_kb::DeviceKB as riscv64_emu::device_trait::DeviceBase&gt;::do_read (20 samples, 0.12%)</title><rect x="71.9872%" y="597" width="0.1188%" height="15" fill="rgb(244,68,36)" fg:x="12114" fg:w="20"/><text x="72.2372%" y="607.50"></text></g><g><title>riscv64_emu::device_kb::DeviceKB::get_sdl_key (20 samples, 0.12%)</title><rect x="71.9872%" y="581" width="0.1188%" height="15" fill="rgb(232,229,15)" fg:x="12114" fg:w="20"/><text x="72.2372%" y="591.50"></text></g><g><title>ring_channel::channel::RingReceiver&lt;T&gt;::try_recv (20 samples, 0.12%)</title><rect x="71.9872%" y="565" width="0.1188%" height="15" fill="rgb(254,30,23)" fg:x="12114" fg:w="20"/><text x="72.2372%" y="575.50"></text></g><g><title>ring_channel::buffer::RingBuffer&lt;T&gt;::pop (20 samples, 0.12%)</title><rect x="71.9872%" y="549" width="0.1188%" height="15" fill="rgb(235,160,14)" fg:x="12114" fg:w="20"/><text x="72.2372%" y="559.50"></text></g><g><title>&lt;riscv64_emu::device_vga::DeviceVGA as riscv64_emu::device_trait::DeviceBase&gt;::do_update (20 samples, 0.12%)</title><rect x="71.9872%" y="533" width="0.1188%" height="15" fill="rgb(212,155,44)" fg:x="12114" fg:w="20"/><text x="72.2372%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (20 samples, 0.12%)</title><rect x="71.9872%" y="517" width="0.1188%" height="15" fill="rgb(226,2,50)" fg:x="12114" fg:w="20"/><text x="72.2372%" y="527.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::inner (20 samples, 0.12%)</title><rect x="71.9872%" y="501" width="0.1188%" height="15" fill="rgb(234,177,6)" fg:x="12114" fg:w="20"/><text x="72.2372%" y="511.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (20 samples, 0.12%)</title><rect x="71.9872%" y="485" width="0.1188%" height="15" fill="rgb(217,24,9)" fg:x="12114" fg:w="20"/><text x="72.2372%" y="495.50"></text></g><g><title>&lt;riscv64_emu::device_vga::DeviceVGA as riscv64_emu::device_trait::DeviceBase&gt;::do_update (270 samples, 1.60%)</title><rect x="72.1060%" y="597" width="1.6045%" height="15" fill="rgb(220,13,46)" fg:x="12134" fg:w="270"/><text x="72.3560%" y="607.50"></text></g><g><title>&lt;riscv64_emu::device_vga::DeviceVGA as riscv64_emu::device_trait::DeviceBase&gt;::do_write (3 samples, 0.02%)</title><rect x="73.7105%" y="597" width="0.0178%" height="15" fill="rgb(239,221,27)" fg:x="12404" fg:w="3"/><text x="73.9605%" y="607.50"></text></g><g><title>[iris_dri.so] (4 samples, 0.02%)</title><rect x="73.7283%" y="597" width="0.0238%" height="15" fill="rgb(222,198,25)" fg:x="12407" fg:w="4"/><text x="73.9783%" y="607.50"></text></g><g><title>[libc.so.6] (33 samples, 0.20%)</title><rect x="73.7521%" y="597" width="0.1961%" height="15" fill="rgb(211,99,13)" fg:x="12411" fg:w="33"/><text x="74.0021%" y="607.50"></text></g><g><title>riscv64_emu::inst_rv64i::INSTRUCTIONS_I::{{closure}} (71 samples, 0.42%)</title><rect x="75.2555%" y="581" width="0.4219%" height="15" fill="rgb(232,111,31)" fg:x="12664" fg:w="71"/><text x="75.5055%" y="591.50"></text></g><g><title>core::ops::function::FnOnce::call_once (290 samples, 1.72%)</title><rect x="73.9601%" y="597" width="1.7233%" height="15" fill="rgb(245,82,37)" fg:x="12446" fg:w="290"/><text x="74.2101%" y="607.50"></text></g><g><title>riscv64_emu::bus::Bus::write (5 samples, 0.03%)</title><rect x="75.6834%" y="597" width="0.0297%" height="15" fill="rgb(227,149,46)" fg:x="12736" fg:w="5"/><text x="75.9334%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.03%)</title><rect x="75.6834%" y="581" width="0.0297%" height="15" fill="rgb(218,36,50)" fg:x="12736" fg:w="5"/><text x="75.9334%" y="591.50"></text></g><g><title>riscv64_emu::bus::Bus::write::{{closure}} (5 samples, 0.03%)</title><rect x="75.6834%" y="565" width="0.0297%" height="15" fill="rgb(226,80,48)" fg:x="12736" fg:w="5"/><text x="75.9334%" y="575.50"></text></g><g><title>riscv64_emu::device_trait::DeviceBase::do_update (701 samples, 4.17%)</title><rect x="75.7131%" y="597" width="4.1657%" height="15" fill="rgb(238,224,15)" fg:x="12741" fg:w="701"/><text x="75.9631%" y="607.50">riscv..</text></g><g><title>riscv64_emu::device_dram::DeviceDram::load_binary (5 samples, 0.03%)</title><rect x="79.8788%" y="581" width="0.0297%" height="15" fill="rgb(241,136,10)" fg:x="13442" fg:w="5"/><text x="80.1288%" y="591.50"></text></g><g><title>std::fs::read (5 samples, 0.03%)</title><rect x="79.8788%" y="565" width="0.0297%" height="15" fill="rgb(208,32,45)" fg:x="13442" fg:w="5"/><text x="80.1288%" y="575.50"></text></g><g><title>std::fs::read::inner (5 samples, 0.03%)</title><rect x="79.8788%" y="549" width="0.0297%" height="15" fill="rgb(207,135,9)" fg:x="13442" fg:w="5"/><text x="80.1288%" y="559.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_to_end (5 samples, 0.03%)</title><rect x="79.8788%" y="533" width="0.0297%" height="15" fill="rgb(206,86,44)" fg:x="13442" fg:w="5"/><text x="80.1288%" y="543.50"></text></g><g><title>std::io::default_read_to_end (5 samples, 0.03%)</title><rect x="79.8788%" y="517" width="0.0297%" height="15" fill="rgb(245,177,15)" fg:x="13442" fg:w="5"/><text x="80.1288%" y="527.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_buf (5 samples, 0.03%)</title><rect x="79.8788%" y="501" width="0.0297%" height="15" fill="rgb(206,64,50)" fg:x="13442" fg:w="5"/><text x="80.1288%" y="511.50"></text></g><g><title>std::sys::unix::fs::File::read_buf (5 samples, 0.03%)</title><rect x="79.8788%" y="485" width="0.0297%" height="15" fill="rgb(234,36,40)" fg:x="13442" fg:w="5"/><text x="80.1288%" y="495.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read_buf (5 samples, 0.03%)</title><rect x="79.8788%" y="469" width="0.0297%" height="15" fill="rgb(213,64,8)" fg:x="13442" fg:w="5"/><text x="80.1288%" y="479.50"></text></g><g><title>read (5 samples, 0.03%)</title><rect x="79.8788%" y="453" width="0.0297%" height="15" fill="rgb(210,75,36)" fg:x="13442" fg:w="5"/><text x="80.1288%" y="463.50"></text></g><g><title>XCheckIfEvent (5 samples, 0.03%)</title><rect x="79.9263%" y="485" width="0.0297%" height="15" fill="rgb(229,88,21)" fg:x="13450" fg:w="5"/><text x="80.1763%" y="495.50"></text></g><g><title>_XEventsQueued (5 samples, 0.03%)</title><rect x="79.9263%" y="469" width="0.0297%" height="15" fill="rgb(252,204,47)" fg:x="13450" fg:w="5"/><text x="80.1763%" y="479.50"></text></g><g><title>[libX11.so.6.4.0] (5 samples, 0.03%)</title><rect x="79.9263%" y="453" width="0.0297%" height="15" fill="rgb(208,77,27)" fg:x="13450" fg:w="5"/><text x="80.1763%" y="463.50"></text></g><g><title>_XEnq (4 samples, 0.02%)</title><rect x="79.9323%" y="437" width="0.0238%" height="15" fill="rgb(221,76,26)" fg:x="13451" fg:w="4"/><text x="80.1823%" y="447.50"></text></g><g><title>[libXi.so.6.1.0] (3 samples, 0.02%)</title><rect x="79.9382%" y="421" width="0.0178%" height="15" fill="rgb(225,139,18)" fg:x="13452" fg:w="3"/><text x="80.1882%" y="431.50"></text></g><g><title>XQueryPointer (5 samples, 0.03%)</title><rect x="79.9679%" y="469" width="0.0297%" height="15" fill="rgb(230,137,11)" fg:x="13457" fg:w="5"/><text x="80.2179%" y="479.50"></text></g><g><title>_XReply (5 samples, 0.03%)</title><rect x="79.9679%" y="453" width="0.0297%" height="15" fill="rgb(212,28,1)" fg:x="13457" fg:w="5"/><text x="80.2179%" y="463.50"></text></g><g><title>xcb_wait_for_reply64 (5 samples, 0.03%)</title><rect x="79.9679%" y="437" width="0.0297%" height="15" fill="rgb(248,164,17)" fg:x="13457" fg:w="5"/><text x="80.2179%" y="447.50"></text></g><g><title>[libxcb.so.1.1.0] (5 samples, 0.03%)</title><rect x="79.9679%" y="421" width="0.0297%" height="15" fill="rgb(222,171,42)" fg:x="13457" fg:w="5"/><text x="80.2179%" y="431.50"></text></g><g><title>[libxcb.so.1.1.0] (5 samples, 0.03%)</title><rect x="79.9679%" y="405" width="0.0297%" height="15" fill="rgb(243,84,45)" fg:x="13457" fg:w="5"/><text x="80.2179%" y="415.50"></text></g><g><title>__poll (5 samples, 0.03%)</title><rect x="79.9679%" y="389" width="0.0297%" height="15" fill="rgb(252,49,23)" fg:x="13457" fg:w="5"/><text x="80.2179%" y="399.50"></text></g><g><title>XGetWindowAttributes (5 samples, 0.03%)</title><rect x="80.0036%" y="453" width="0.0297%" height="15" fill="rgb(215,19,7)" fg:x="13463" fg:w="5"/><text x="80.2536%" y="463.50"></text></g><g><title>_XGetWindowAttributes (5 samples, 0.03%)</title><rect x="80.0036%" y="437" width="0.0297%" height="15" fill="rgb(238,81,41)" fg:x="13463" fg:w="5"/><text x="80.2536%" y="447.50"></text></g><g><title>_XReply (5 samples, 0.03%)</title><rect x="80.0036%" y="421" width="0.0297%" height="15" fill="rgb(210,199,37)" fg:x="13463" fg:w="5"/><text x="80.2536%" y="431.50"></text></g><g><title>xcb_wait_for_reply64 (5 samples, 0.03%)</title><rect x="80.0036%" y="405" width="0.0297%" height="15" fill="rgb(244,192,49)" fg:x="13463" fg:w="5"/><text x="80.2536%" y="415.50"></text></g><g><title>[libxcb.so.1.1.0] (5 samples, 0.03%)</title><rect x="80.0036%" y="389" width="0.0297%" height="15" fill="rgb(226,211,11)" fg:x="13463" fg:w="5"/><text x="80.2536%" y="399.50"></text></g><g><title>[libxcb.so.1.1.0] (5 samples, 0.03%)</title><rect x="80.0036%" y="373" width="0.0297%" height="15" fill="rgb(236,162,54)" fg:x="13463" fg:w="5"/><text x="80.2536%" y="383.50"></text></g><g><title>__poll (4 samples, 0.02%)</title><rect x="80.0095%" y="357" width="0.0238%" height="15" fill="rgb(220,229,9)" fg:x="13464" fg:w="4"/><text x="80.2595%" y="367.50"></text></g><g><title>XTranslateCoordinates (6 samples, 0.04%)</title><rect x="80.0333%" y="453" width="0.0357%" height="15" fill="rgb(250,87,22)" fg:x="13468" fg:w="6"/><text x="80.2833%" y="463.50"></text></g><g><title>_XReply (6 samples, 0.04%)</title><rect x="80.0333%" y="437" width="0.0357%" height="15" fill="rgb(239,43,17)" fg:x="13468" fg:w="6"/><text x="80.2833%" y="447.50"></text></g><g><title>xcb_wait_for_reply64 (6 samples, 0.04%)</title><rect x="80.0333%" y="421" width="0.0357%" height="15" fill="rgb(231,177,25)" fg:x="13468" fg:w="6"/><text x="80.2833%" y="431.50"></text></g><g><title>[libxcb.so.1.1.0] (6 samples, 0.04%)</title><rect x="80.0333%" y="405" width="0.0357%" height="15" fill="rgb(219,179,1)" fg:x="13468" fg:w="6"/><text x="80.2833%" y="415.50"></text></g><g><title>[libxcb.so.1.1.0] (6 samples, 0.04%)</title><rect x="80.0333%" y="389" width="0.0357%" height="15" fill="rgb(238,219,53)" fg:x="13468" fg:w="6"/><text x="80.2833%" y="399.50"></text></g><g><title>__poll (4 samples, 0.02%)</title><rect x="80.0452%" y="373" width="0.0238%" height="15" fill="rgb(232,167,36)" fg:x="13470" fg:w="4"/><text x="80.2952%" y="383.50"></text></g><g><title>[libSDL2-2.0.so.0.2600.3] (12 samples, 0.07%)</title><rect x="80.0036%" y="469" width="0.0713%" height="15" fill="rgb(244,19,51)" fg:x="13463" fg:w="12"/><text x="80.2536%" y="479.50"></text></g><g><title>[libdbus-1.so.3.32.2] (3 samples, 0.02%)</title><rect x="80.0749%" y="469" width="0.0178%" height="15" fill="rgb(224,6,22)" fg:x="13475" fg:w="3"/><text x="80.3249%" y="479.50"></text></g><g><title>[libdbus-1.so.3.32.2] (3 samples, 0.02%)</title><rect x="80.0749%" y="453" width="0.0178%" height="15" fill="rgb(224,145,5)" fg:x="13475" fg:w="3"/><text x="80.3249%" y="463.50"></text></g><g><title>[libdbus-1.so.3.32.2] (3 samples, 0.02%)</title><rect x="80.0749%" y="437" width="0.0178%" height="15" fill="rgb(234,130,49)" fg:x="13475" fg:w="3"/><text x="80.3249%" y="447.50"></text></g><g><title>&lt;sdl2::event::EventPollIterator as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.19%)</title><rect x="79.9085%" y="565" width="0.1902%" height="15" fill="rgb(254,6,2)" fg:x="13447" fg:w="32"/><text x="80.1585%" y="575.50"></text></g><g><title>sdl2::event::poll_event (32 samples, 0.19%)</title><rect x="79.9085%" y="549" width="0.1902%" height="15" fill="rgb(208,96,46)" fg:x="13447" fg:w="32"/><text x="80.1585%" y="559.50"></text></g><g><title>[libSDL2-2.0.so.0.2600.3] (32 samples, 0.19%)</title><rect x="79.9085%" y="533" width="0.1902%" height="15" fill="rgb(239,3,39)" fg:x="13447" fg:w="32"/><text x="80.1585%" y="543.50"></text></g><g><title>[libSDL2-2.0.so.0.2600.3] (31 samples, 0.18%)</title><rect x="79.9144%" y="517" width="0.1842%" height="15" fill="rgb(233,210,1)" fg:x="13448" fg:w="31"/><text x="80.1644%" y="527.50"></text></g><g><title>[libSDL2-2.0.so.0.2600.3] (30 samples, 0.18%)</title><rect x="79.9204%" y="501" width="0.1783%" height="15" fill="rgb(244,137,37)" fg:x="13449" fg:w="30"/><text x="80.1704%" y="511.50"></text></g><g><title>[libSDL2-2.0.so.0.2600.3] (24 samples, 0.14%)</title><rect x="79.9560%" y="485" width="0.1426%" height="15" fill="rgb(240,136,2)" fg:x="13455" fg:w="24"/><text x="80.2060%" y="495.50"></text></g><g><title>[iris_dri.so] (4 samples, 0.02%)</title><rect x="80.1105%" y="501" width="0.0238%" height="15" fill="rgb(239,18,37)" fg:x="13481" fg:w="4"/><text x="80.3605%" y="511.50"></text></g><g><title>[iris_dri.so] (4 samples, 0.02%)</title><rect x="80.1105%" y="485" width="0.0238%" height="15" fill="rgb(218,185,22)" fg:x="13481" fg:w="4"/><text x="80.3605%" y="495.50"></text></g><g><title>cfree (2 samples, 0.01%)</title><rect x="80.1224%" y="469" width="0.0119%" height="15" fill="rgb(225,218,4)" fg:x="13483" fg:w="2"/><text x="80.3724%" y="479.50"></text></g><g><title>[libc.so.6] (2 samples, 0.01%)</title><rect x="80.1224%" y="453" width="0.0119%" height="15" fill="rgb(230,182,32)" fg:x="13483" fg:w="2"/><text x="80.3724%" y="463.50"></text></g><g><title>std::process::exit (23 samples, 0.14%)</title><rect x="80.1046%" y="565" width="0.1367%" height="15" fill="rgb(242,56,43)" fg:x="13480" fg:w="23"/><text x="80.3546%" y="575.50"></text></g><g><title>std::sys::unix::os::exit (23 samples, 0.14%)</title><rect x="80.1046%" y="549" width="0.1367%" height="15" fill="rgb(233,99,24)" fg:x="13480" fg:w="23"/><text x="80.3546%" y="559.50"></text></g><g><title>exit (23 samples, 0.14%)</title><rect x="80.1046%" y="533" width="0.1367%" height="15" fill="rgb(234,209,42)" fg:x="13480" fg:w="23"/><text x="80.3546%" y="543.50"></text></g><g><title>[libc.so.6] (23 samples, 0.14%)</title><rect x="80.1046%" y="517" width="0.1367%" height="15" fill="rgb(227,7,12)" fg:x="13480" fg:w="23"/><text x="80.3546%" y="527.50"></text></g><g><title>[libLLVM-15.so] (18 samples, 0.11%)</title><rect x="80.1343%" y="501" width="0.1070%" height="15" fill="rgb(245,203,43)" fg:x="13485" fg:w="18"/><text x="80.3843%" y="511.50"></text></g><g><title>[libLLVM-15.so] (6 samples, 0.04%)</title><rect x="80.2056%" y="485" width="0.0357%" height="15" fill="rgb(238,205,33)" fg:x="13497" fg:w="6"/><text x="80.4556%" y="495.50"></text></g><g><title>riscv64_emu::handle_sdl_event (57 samples, 0.34%)</title><rect x="79.9085%" y="581" width="0.3387%" height="15" fill="rgb(231,56,7)" fg:x="13447" fg:w="57"/><text x="80.1585%" y="591.50"></text></g><g><title>[iris_dri.so] (4 samples, 0.02%)</title><rect x="80.2472%" y="533" width="0.0238%" height="15" fill="rgb(244,186,29)" fg:x="13504" fg:w="4"/><text x="80.4972%" y="543.50"></text></g><g><title>[iris_dri.so] (4 samples, 0.02%)</title><rect x="80.2472%" y="517" width="0.0238%" height="15" fill="rgb(234,111,31)" fg:x="13504" fg:w="4"/><text x="80.4972%" y="527.50"></text></g><g><title>[iris_dri.so] (4 samples, 0.02%)</title><rect x="80.2472%" y="501" width="0.0238%" height="15" fill="rgb(241,149,10)" fg:x="13504" fg:w="4"/><text x="80.4972%" y="511.50"></text></g><g><title>[iris_dri.so] (4 samples, 0.02%)</title><rect x="80.2472%" y="485" width="0.0238%" height="15" fill="rgb(249,206,44)" fg:x="13504" fg:w="4"/><text x="80.4972%" y="495.50"></text></g><g><title>[iris_dri.so] (4 samples, 0.02%)</title><rect x="80.2472%" y="469" width="0.0238%" height="15" fill="rgb(251,153,30)" fg:x="13504" fg:w="4"/><text x="80.4972%" y="479.50"></text></g><g><title>[iris_dri.so] (4 samples, 0.02%)</title><rect x="80.2472%" y="453" width="0.0238%" height="15" fill="rgb(239,152,38)" fg:x="13504" fg:w="4"/><text x="80.4972%" y="463.50"></text></g><g><title>[iris_dri.so] (3 samples, 0.02%)</title><rect x="80.2531%" y="437" width="0.0178%" height="15" fill="rgb(249,139,47)" fg:x="13505" fg:w="3"/><text x="80.5031%" y="447.50"></text></g><g><title>[iris_dri.so] (3 samples, 0.02%)</title><rect x="80.2531%" y="421" width="0.0178%" height="15" fill="rgb(244,64,35)" fg:x="13505" fg:w="3"/><text x="80.5031%" y="431.50"></text></g><g><title>[iris_dri.so] (3 samples, 0.02%)</title><rect x="80.2531%" y="405" width="0.0178%" height="15" fill="rgb(216,46,15)" fg:x="13505" fg:w="3"/><text x="80.5031%" y="415.50"></text></g><g><title>[iris_dri.so] (3 samples, 0.02%)</title><rect x="80.2531%" y="389" width="0.0178%" height="15" fill="rgb(250,74,19)" fg:x="13505" fg:w="3"/><text x="80.5031%" y="399.50"></text></g><g><title>[iris_dri.so] (3 samples, 0.02%)</title><rect x="80.2531%" y="373" width="0.0178%" height="15" fill="rgb(249,42,33)" fg:x="13505" fg:w="3"/><text x="80.5031%" y="383.50"></text></g><g><title>[iris_dri.so] (3 samples, 0.02%)</title><rect x="80.2531%" y="357" width="0.0178%" height="15" fill="rgb(242,149,17)" fg:x="13505" fg:w="3"/><text x="80.5031%" y="367.50"></text></g><g><title>[iris_dri.so] (2 samples, 0.01%)</title><rect x="80.2591%" y="341" width="0.0119%" height="15" fill="rgb(244,29,21)" fg:x="13506" fg:w="2"/><text x="80.5091%" y="351.50"></text></g><g><title>[iris_dri.so] (2 samples, 0.01%)</title><rect x="80.2591%" y="325" width="0.0119%" height="15" fill="rgb(220,130,37)" fg:x="13506" fg:w="2"/><text x="80.5091%" y="335.50"></text></g><g><title>[iris_dri.so] (2 samples, 0.01%)</title><rect x="80.2591%" y="309" width="0.0119%" height="15" fill="rgb(211,67,2)" fg:x="13506" fg:w="2"/><text x="80.5091%" y="319.50"></text></g><g><title>[iris_dri.so] (2 samples, 0.01%)</title><rect x="80.2710%" y="517" width="0.0119%" height="15" fill="rgb(235,68,52)" fg:x="13508" fg:w="2"/><text x="80.5210%" y="527.50"></text></g><g><title>[iris_dri.so] (2 samples, 0.01%)</title><rect x="80.2710%" y="501" width="0.0119%" height="15" fill="rgb(246,142,3)" fg:x="13508" fg:w="2"/><text x="80.5210%" y="511.50"></text></g><g><title>[iris_dri.so] (2 samples, 0.01%)</title><rect x="80.2710%" y="485" width="0.0119%" height="15" fill="rgb(241,25,7)" fg:x="13508" fg:w="2"/><text x="80.5210%" y="495.50"></text></g><g><title>[iris_dri.so] (2 samples, 0.01%)</title><rect x="80.2710%" y="469" width="0.0119%" height="15" fill="rgb(242,119,39)" fg:x="13508" fg:w="2"/><text x="80.5210%" y="479.50"></text></g><g><title>[iris_dri.so] (2 samples, 0.01%)</title><rect x="80.2710%" y="453" width="0.0119%" height="15" fill="rgb(241,98,45)" fg:x="13508" fg:w="2"/><text x="80.5210%" y="463.50"></text></g><g><title>[iris_dri.so] (2 samples, 0.01%)</title><rect x="80.2710%" y="437" width="0.0119%" height="15" fill="rgb(254,28,30)" fg:x="13508" fg:w="2"/><text x="80.5210%" y="447.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (2 samples, 0.01%)</title><rect x="80.2829%" y="421" width="0.0119%" height="15" fill="rgb(241,142,54)" fg:x="13510" fg:w="2"/><text x="80.5329%" y="431.50"></text></g><g><title>[libc.so.6] (2 samples, 0.01%)</title><rect x="80.2829%" y="405" width="0.0119%" height="15" fill="rgb(222,85,15)" fg:x="13510" fg:w="2"/><text x="80.5329%" y="415.50"></text></g><g><title>[libGLX.so.0.0.0] (3 samples, 0.02%)</title><rect x="80.2829%" y="485" width="0.0178%" height="15" fill="rgb(210,85,47)" fg:x="13510" fg:w="3"/><text x="80.5329%" y="495.50"></text></g><g><title>[libGLX.so.0.0.0] (3 samples, 0.02%)</title><rect x="80.2829%" y="469" width="0.0178%" height="15" fill="rgb(224,206,25)" fg:x="13510" fg:w="3"/><text x="80.5329%" y="479.50"></text></g><g><title>__glDispatchMakeCurrent (3 samples, 0.02%)</title><rect x="80.2829%" y="453" width="0.0178%" height="15" fill="rgb(243,201,19)" fg:x="13510" fg:w="3"/><text x="80.5329%" y="463.50"></text></g><g><title>[libGLdispatch.so.0.0.0] (3 samples, 0.02%)</title><rect x="80.2829%" y="437" width="0.0178%" height="15" fill="rgb(236,59,4)" fg:x="13510" fg:w="3"/><text x="80.5329%" y="447.50"></text></g><g><title>[iris_dri.so] (3 samples, 0.02%)</title><rect x="80.3007%" y="421" width="0.0178%" height="15" fill="rgb(254,179,45)" fg:x="13513" fg:w="3"/><text x="80.5507%" y="431.50"></text></g><g><title>[iris_dri.so] (3 samples, 0.02%)</title><rect x="80.3007%" y="405" width="0.0178%" height="15" fill="rgb(226,14,10)" fg:x="13513" fg:w="3"/><text x="80.5507%" y="415.50"></text></g><g><title>[iris_dri.so] (3 samples, 0.02%)</title><rect x="80.3007%" y="389" width="0.0178%" height="15" fill="rgb(244,27,41)" fg:x="13513" fg:w="3"/><text x="80.5507%" y="399.50"></text></g><g><title>[iris_dri.so] (2 samples, 0.01%)</title><rect x="80.3066%" y="373" width="0.0119%" height="15" fill="rgb(235,35,32)" fg:x="13514" fg:w="2"/><text x="80.5566%" y="383.50"></text></g><g><title>[iris_dri.so] (2 samples, 0.01%)</title><rect x="80.3066%" y="357" width="0.0119%" height="15" fill="rgb(218,68,31)" fg:x="13514" fg:w="2"/><text x="80.5566%" y="367.50"></text></g><g><title>[iris_dri.so] (2 samples, 0.01%)</title><rect x="80.3066%" y="341" width="0.0119%" height="15" fill="rgb(207,120,37)" fg:x="13514" fg:w="2"/><text x="80.5566%" y="351.50"></text></g><g><title>[iris_dri.so] (2 samples, 0.01%)</title><rect x="80.3066%" y="325" width="0.0119%" height="15" fill="rgb(227,98,0)" fg:x="13514" fg:w="2"/><text x="80.5566%" y="335.50"></text></g><g><title>XML_ParseBuffer (2 samples, 0.01%)</title><rect x="80.3066%" y="309" width="0.0119%" height="15" fill="rgb(207,7,3)" fg:x="13514" fg:w="2"/><text x="80.5566%" y="319.50"></text></g><g><title>[libexpat.so.1.8.10] (2 samples, 0.01%)</title><rect x="80.3066%" y="293" width="0.0119%" height="15" fill="rgb(206,98,19)" fg:x="13514" fg:w="2"/><text x="80.5566%" y="303.50"></text></g><g><title>[libexpat.so.1.8.10] (2 samples, 0.01%)</title><rect x="80.3066%" y="277" width="0.0119%" height="15" fill="rgb(217,5,26)" fg:x="13514" fg:w="2"/><text x="80.5566%" y="287.50"></text></g><g><title>[libexpat.so.1.8.10] (2 samples, 0.01%)</title><rect x="80.3066%" y="261" width="0.0119%" height="15" fill="rgb(235,190,38)" fg:x="13514" fg:w="2"/><text x="80.5566%" y="271.50"></text></g><g><title>[libexpat.so.1.8.10] (2 samples, 0.01%)</title><rect x="80.3066%" y="245" width="0.0119%" height="15" fill="rgb(247,86,24)" fg:x="13514" fg:w="2"/><text x="80.5566%" y="255.50"></text></g><g><title>[libexpat.so.1.8.10] (2 samples, 0.01%)</title><rect x="80.3066%" y="229" width="0.0119%" height="15" fill="rgb(205,101,16)" fg:x="13514" fg:w="2"/><text x="80.5566%" y="239.50"></text></g><g><title>[libexpat.so.1.8.10] (2 samples, 0.01%)</title><rect x="80.3066%" y="213" width="0.0119%" height="15" fill="rgb(246,168,33)" fg:x="13514" fg:w="2"/><text x="80.5566%" y="223.50"></text></g><g><title>[iris_dri.so] (5 samples, 0.03%)</title><rect x="80.4314%" y="405" width="0.0297%" height="15" fill="rgb(231,114,1)" fg:x="13535" fg:w="5"/><text x="80.6814%" y="415.50"></text></g><g><title>[iris_dri.so] (2 samples, 0.01%)</title><rect x="80.4493%" y="389" width="0.0119%" height="15" fill="rgb(207,184,53)" fg:x="13538" fg:w="2"/><text x="80.6993%" y="399.50"></text></g><g><title>XML_ParseBuffer (4 samples, 0.02%)</title><rect x="80.4671%" y="373" width="0.0238%" height="15" fill="rgb(224,95,51)" fg:x="13541" fg:w="4"/><text x="80.7171%" y="383.50"></text></g><g><title>[libexpat.so.1.8.10] (4 samples, 0.02%)</title><rect x="80.4671%" y="357" width="0.0238%" height="15" fill="rgb(212,188,45)" fg:x="13541" fg:w="4"/><text x="80.7171%" y="367.50"></text></g><g><title>[libexpat.so.1.8.10] (4 samples, 0.02%)</title><rect x="80.4671%" y="341" width="0.0238%" height="15" fill="rgb(223,154,38)" fg:x="13541" fg:w="4"/><text x="80.7171%" y="351.50"></text></g><g><title>[libexpat.so.1.8.10] (4 samples, 0.02%)</title><rect x="80.4671%" y="325" width="0.0238%" height="15" fill="rgb(251,22,52)" fg:x="13541" fg:w="4"/><text x="80.7171%" y="335.50"></text></g><g><title>[ld-linux-x86-64.so.2] (5 samples, 0.03%)</title><rect x="80.5146%" y="197" width="0.0297%" height="15" fill="rgb(229,209,22)" fg:x="13549" fg:w="5"/><text x="80.7646%" y="207.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3 samples, 0.02%)</title><rect x="80.5265%" y="181" width="0.0178%" height="15" fill="rgb(234,138,34)" fg:x="13551" fg:w="3"/><text x="80.7765%" y="191.50"></text></g><g><title>dlopen (16 samples, 0.10%)</title><rect x="80.4908%" y="373" width="0.0951%" height="15" fill="rgb(212,95,11)" fg:x="13545" fg:w="16"/><text x="80.7408%" y="383.50"></text></g><g><title>[libc.so.6] (16 samples, 0.10%)</title><rect x="80.4908%" y="357" width="0.0951%" height="15" fill="rgb(240,179,47)" fg:x="13545" fg:w="16"/><text x="80.7408%" y="367.50"></text></g><g><title>[ld-linux-x86-64.so.2] (16 samples, 0.10%)</title><rect x="80.4908%" y="341" width="0.0951%" height="15" fill="rgb(240,163,11)" fg:x="13545" fg:w="16"/><text x="80.7408%" y="351.50"></text></g><g><title>_dl_catch_exception (16 samples, 0.10%)</title><rect x="80.4908%" y="325" width="0.0951%" height="15" fill="rgb(236,37,12)" fg:x="13545" fg:w="16"/><text x="80.7408%" y="335.50"></text></g><g><title>[libc.so.6] (16 samples, 0.10%)</title><rect x="80.4908%" y="309" width="0.0951%" height="15" fill="rgb(232,164,16)" fg:x="13545" fg:w="16"/><text x="80.7408%" y="319.50"></text></g><g><title>[ld-linux-x86-64.so.2] (16 samples, 0.10%)</title><rect x="80.4908%" y="293" width="0.0951%" height="15" fill="rgb(244,205,15)" fg:x="13545" fg:w="16"/><text x="80.7408%" y="303.50"></text></g><g><title>_dl_catch_exception (16 samples, 0.10%)</title><rect x="80.4908%" y="277" width="0.0951%" height="15" fill="rgb(223,117,47)" fg:x="13545" fg:w="16"/><text x="80.7408%" y="287.50"></text></g><g><title>[ld-linux-x86-64.so.2] (16 samples, 0.10%)</title><rect x="80.4908%" y="261" width="0.0951%" height="15" fill="rgb(244,107,35)" fg:x="13545" fg:w="16"/><text x="80.7408%" y="271.50"></text></g><g><title>_dl_catch_exception (16 samples, 0.10%)</title><rect x="80.4908%" y="245" width="0.0951%" height="15" fill="rgb(205,140,8)" fg:x="13545" fg:w="16"/><text x="80.7408%" y="255.50"></text></g><g><title>[ld-linux-x86-64.so.2] (16 samples, 0.10%)</title><rect x="80.4908%" y="229" width="0.0951%" height="15" fill="rgb(228,84,46)" fg:x="13545" fg:w="16"/><text x="80.7408%" y="239.50"></text></g><g><title>[ld-linux-x86-64.so.2] (16 samples, 0.10%)</title><rect x="80.4908%" y="213" width="0.0951%" height="15" fill="rgb(254,188,9)" fg:x="13545" fg:w="16"/><text x="80.7408%" y="223.50"></text></g><g><title>_dl_catch_exception (6 samples, 0.04%)</title><rect x="80.5503%" y="197" width="0.0357%" height="15" fill="rgb(206,112,54)" fg:x="13555" fg:w="6"/><text x="80.8003%" y="207.50"></text></g><g><title>[ld-linux-x86-64.so.2] (6 samples, 0.04%)</title><rect x="80.5503%" y="181" width="0.0357%" height="15" fill="rgb(216,84,49)" fg:x="13555" fg:w="6"/><text x="80.8003%" y="191.50"></text></g><g><title>[ld-linux-x86-64.so.2] (6 samples, 0.04%)</title><rect x="80.5503%" y="165" width="0.0357%" height="15" fill="rgb(214,194,35)" fg:x="13555" fg:w="6"/><text x="80.8003%" y="175.50"></text></g><g><title>[ld-linux-x86-64.so.2] (6 samples, 0.04%)</title><rect x="80.5503%" y="149" width="0.0357%" height="15" fill="rgb(249,28,3)" fg:x="13555" fg:w="6"/><text x="80.8003%" y="159.50"></text></g><g><title>[ld-linux-x86-64.so.2] (4 samples, 0.02%)</title><rect x="80.5622%" y="133" width="0.0238%" height="15" fill="rgb(222,56,52)" fg:x="13557" fg:w="4"/><text x="80.8122%" y="143.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (49 samples, 0.29%)</title><rect x="80.3007%" y="469" width="0.2912%" height="15" fill="rgb(245,217,50)" fg:x="13513" fg:w="49"/><text x="80.5507%" y="479.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (49 samples, 0.29%)</title><rect x="80.3007%" y="453" width="0.2912%" height="15" fill="rgb(213,201,24)" fg:x="13513" fg:w="49"/><text x="80.5507%" y="463.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (49 samples, 0.29%)</title><rect x="80.3007%" y="437" width="0.2912%" height="15" fill="rgb(248,116,28)" fg:x="13513" fg:w="49"/><text x="80.5507%" y="447.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (46 samples, 0.27%)</title><rect x="80.3185%" y="421" width="0.2734%" height="15" fill="rgb(219,72,43)" fg:x="13516" fg:w="46"/><text x="80.5685%" y="431.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (22 samples, 0.13%)</title><rect x="80.4611%" y="405" width="0.1307%" height="15" fill="rgb(209,138,14)" fg:x="13540" fg:w="22"/><text x="80.7111%" y="415.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (22 samples, 0.13%)</title><rect x="80.4611%" y="389" width="0.1307%" height="15" fill="rgb(222,18,33)" fg:x="13540" fg:w="22"/><text x="80.7111%" y="399.50"></text></g><g><title>[libSDL2-2.0.so.0.2600.3] (63 samples, 0.37%)</title><rect x="80.3007%" y="485" width="0.3744%" height="15" fill="rgb(213,199,7)" fg:x="13513" fg:w="63"/><text x="80.5507%" y="495.50"></text></g><g><title>glXChooseVisual (14 samples, 0.08%)</title><rect x="80.5919%" y="469" width="0.0832%" height="15" fill="rgb(250,110,10)" fg:x="13562" fg:w="14"/><text x="80.8419%" y="479.50"></text></g><g><title>[libGLX.so.0.0.0] (14 samples, 0.08%)</title><rect x="80.5919%" y="453" width="0.0832%" height="15" fill="rgb(248,123,6)" fg:x="13562" fg:w="14"/><text x="80.8419%" y="463.50"></text></g><g><title>[libGLX.so.0.0.0] (14 samples, 0.08%)</title><rect x="80.5919%" y="437" width="0.0832%" height="15" fill="rgb(206,91,31)" fg:x="13562" fg:w="14"/><text x="80.8419%" y="447.50"></text></g><g><title>dlopen (14 samples, 0.08%)</title><rect x="80.5919%" y="421" width="0.0832%" height="15" fill="rgb(211,154,13)" fg:x="13562" fg:w="14"/><text x="80.8419%" y="431.50"></text></g><g><title>[libc.so.6] (14 samples, 0.08%)</title><rect x="80.5919%" y="405" width="0.0832%" height="15" fill="rgb(225,148,7)" fg:x="13562" fg:w="14"/><text x="80.8419%" y="415.50"></text></g><g><title>[ld-linux-x86-64.so.2] (14 samples, 0.08%)</title><rect x="80.5919%" y="389" width="0.0832%" height="15" fill="rgb(220,160,43)" fg:x="13562" fg:w="14"/><text x="80.8419%" y="399.50"></text></g><g><title>_dl_catch_exception (14 samples, 0.08%)</title><rect x="80.5919%" y="373" width="0.0832%" height="15" fill="rgb(213,52,39)" fg:x="13562" fg:w="14"/><text x="80.8419%" y="383.50"></text></g><g><title>[libc.so.6] (14 samples, 0.08%)</title><rect x="80.5919%" y="357" width="0.0832%" height="15" fill="rgb(243,137,7)" fg:x="13562" fg:w="14"/><text x="80.8419%" y="367.50"></text></g><g><title>[ld-linux-x86-64.so.2] (14 samples, 0.08%)</title><rect x="80.5919%" y="341" width="0.0832%" height="15" fill="rgb(230,79,13)" fg:x="13562" fg:w="14"/><text x="80.8419%" y="351.50"></text></g><g><title>_dl_catch_exception (14 samples, 0.08%)</title><rect x="80.5919%" y="325" width="0.0832%" height="15" fill="rgb(247,105,23)" fg:x="13562" fg:w="14"/><text x="80.8419%" y="335.50"></text></g><g><title>[ld-linux-x86-64.so.2] (14 samples, 0.08%)</title><rect x="80.5919%" y="309" width="0.0832%" height="15" fill="rgb(223,179,41)" fg:x="13562" fg:w="14"/><text x="80.8419%" y="319.50"></text></g><g><title>_dl_catch_exception (14 samples, 0.08%)</title><rect x="80.5919%" y="293" width="0.0832%" height="15" fill="rgb(218,9,34)" fg:x="13562" fg:w="14"/><text x="80.8419%" y="303.50"></text></g><g><title>[ld-linux-x86-64.so.2] (14 samples, 0.08%)</title><rect x="80.5919%" y="277" width="0.0832%" height="15" fill="rgb(222,106,8)" fg:x="13562" fg:w="14"/><text x="80.8419%" y="287.50"></text></g><g><title>[ld-linux-x86-64.so.2] (14 samples, 0.08%)</title><rect x="80.5919%" y="261" width="0.0832%" height="15" fill="rgb(211,220,0)" fg:x="13562" fg:w="14"/><text x="80.8419%" y="271.50"></text></g><g><title>_dl_catch_exception (13 samples, 0.08%)</title><rect x="80.5978%" y="245" width="0.0773%" height="15" fill="rgb(229,52,16)" fg:x="13563" fg:w="13"/><text x="80.8478%" y="255.50"></text></g><g><title>[ld-linux-x86-64.so.2] (13 samples, 0.08%)</title><rect x="80.5978%" y="229" width="0.0773%" height="15" fill="rgb(212,155,18)" fg:x="13563" fg:w="13"/><text x="80.8478%" y="239.50"></text></g><g><title>[ld-linux-x86-64.so.2] (13 samples, 0.08%)</title><rect x="80.5978%" y="213" width="0.0773%" height="15" fill="rgb(242,21,14)" fg:x="13563" fg:w="13"/><text x="80.8478%" y="223.50"></text></g><g><title>[ld-linux-x86-64.so.2] (13 samples, 0.08%)</title><rect x="80.5978%" y="197" width="0.0773%" height="15" fill="rgb(222,19,48)" fg:x="13563" fg:w="13"/><text x="80.8478%" y="207.50"></text></g><g><title>[ld-linux-x86-64.so.2] (12 samples, 0.07%)</title><rect x="80.6038%" y="181" width="0.0713%" height="15" fill="rgb(232,45,27)" fg:x="13564" fg:w="12"/><text x="80.8538%" y="191.50"></text></g><g><title>__poll (5 samples, 0.03%)</title><rect x="80.6751%" y="373" width="0.0297%" height="15" fill="rgb(249,103,42)" fg:x="13576" fg:w="5"/><text x="80.9251%" y="383.50"></text></g><g><title>glXCreateContext (6 samples, 0.04%)</title><rect x="80.6751%" y="485" width="0.0357%" height="15" fill="rgb(246,81,33)" fg:x="13576" fg:w="6"/><text x="80.9251%" y="495.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (6 samples, 0.04%)</title><rect x="80.6751%" y="469" width="0.0357%" height="15" fill="rgb(252,33,42)" fg:x="13576" fg:w="6"/><text x="80.9251%" y="479.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (6 samples, 0.04%)</title><rect x="80.6751%" y="453" width="0.0357%" height="15" fill="rgb(209,212,41)" fg:x="13576" fg:w="6"/><text x="80.9251%" y="463.50"></text></g><g><title>[libGLX_mesa.so.0.0.0] (6 samples, 0.04%)</title><rect x="80.6751%" y="437" width="0.0357%" height="15" fill="rgb(207,154,6)" fg:x="13576" fg:w="6"/><text x="80.9251%" y="447.50"></text></g><g><title>xcb_wait_for_reply (6 samples, 0.04%)</title><rect x="80.6751%" y="421" width="0.0357%" height="15" fill="rgb(223,64,47)" fg:x="13576" fg:w="6"/><text x="80.9251%" y="431.50"></text></g><g><title>[libxcb.so.1.1.0] (6 samples, 0.04%)</title><rect x="80.6751%" y="405" width="0.0357%" height="15" fill="rgb(211,161,38)" fg:x="13576" fg:w="6"/><text x="80.9251%" y="415.50"></text></g><g><title>[libxcb.so.1.1.0] (6 samples, 0.04%)</title><rect x="80.6751%" y="389" width="0.0357%" height="15" fill="rgb(219,138,40)" fg:x="13576" fg:w="6"/><text x="80.9251%" y="399.50"></text></g><g><title>sdl2::render::CanvasBuilder::build (79 samples, 0.47%)</title><rect x="80.2472%" y="581" width="0.4695%" height="15" fill="rgb(241,228,46)" fg:x="13504" fg:w="79"/><text x="80.4972%" y="591.50"></text></g><g><title>[libSDL2-2.0.so.0.2600.3] (79 samples, 0.47%)</title><rect x="80.2472%" y="565" width="0.4695%" height="15" fill="rgb(223,209,38)" fg:x="13504" fg:w="79"/><text x="80.4972%" y="575.50"></text></g><g><title>[libSDL2-2.0.so.0.2600.3] (79 samples, 0.47%)</title><rect x="80.2472%" y="549" width="0.4695%" height="15" fill="rgb(236,164,45)" fg:x="13504" fg:w="79"/><text x="80.4972%" y="559.50"></text></g><g><title>[libSDL2-2.0.so.0.2600.3] (75 samples, 0.45%)</title><rect x="80.2710%" y="533" width="0.4457%" height="15" fill="rgb(231,15,5)" fg:x="13508" fg:w="75"/><text x="80.5210%" y="543.50"></text></g><g><title>[libSDL2-2.0.so.0.2600.3] (73 samples, 0.43%)</title><rect x="80.2829%" y="517" width="0.4338%" height="15" fill="rgb(252,35,15)" fg:x="13510" fg:w="73"/><text x="80.5329%" y="527.50"></text></g><g><title>[libSDL2-2.0.so.0.2600.3] (73 samples, 0.43%)</title><rect x="80.2829%" y="501" width="0.4338%" height="15" fill="rgb(248,181,18)" fg:x="13510" fg:w="73"/><text x="80.5329%" y="511.50"></text></g><g><title>[libSDL2-2.0.so.0.2600.3] (5 samples, 0.03%)</title><rect x="80.7167%" y="501" width="0.0297%" height="15" fill="rgb(233,39,42)" fg:x="13583" fg:w="5"/><text x="80.9667%" y="511.50"></text></g><g><title>_XimOpenIM (5 samples, 0.03%)</title><rect x="80.7167%" y="485" width="0.0297%" height="15" fill="rgb(238,110,33)" fg:x="13583" fg:w="5"/><text x="80.9667%" y="495.50"></text></g><g><title>_XimLocalOpenIM (5 samples, 0.03%)</title><rect x="80.7167%" y="469" width="0.0297%" height="15" fill="rgb(233,195,10)" fg:x="13583" fg:w="5"/><text x="80.9667%" y="479.50"></text></g><g><title>[libX11.so.6.4.0] (5 samples, 0.03%)</title><rect x="80.7167%" y="453" width="0.0297%" height="15" fill="rgb(254,105,3)" fg:x="13583" fg:w="5"/><text x="80.9667%" y="463.50"></text></g><g><title>sdl2::sdl::Sdl::video (6 samples, 0.04%)</title><rect x="80.7167%" y="581" width="0.0357%" height="15" fill="rgb(221,225,9)" fg:x="13583" fg:w="6"/><text x="80.9667%" y="591.50"></text></g><g><title>sdl2::sdl::VideoSubsystem::new (6 samples, 0.04%)</title><rect x="80.7167%" y="565" width="0.0357%" height="15" fill="rgb(224,227,45)" fg:x="13583" fg:w="6"/><text x="80.9667%" y="575.50"></text></g><g><title>[libSDL2-2.0.so.0.2600.3] (6 samples, 0.04%)</title><rect x="80.7167%" y="549" width="0.0357%" height="15" fill="rgb(229,198,43)" fg:x="13583" fg:w="6"/><text x="80.9667%" y="559.50"></text></g><g><title>[libSDL2-2.0.so.0.2600.3] (6 samples, 0.04%)</title><rect x="80.7167%" y="533" width="0.0357%" height="15" fill="rgb(206,209,35)" fg:x="13583" fg:w="6"/><text x="80.9667%" y="543.50"></text></g><g><title>[libSDL2-2.0.so.0.2600.3] (6 samples, 0.04%)</title><rect x="80.7167%" y="517" width="0.0357%" height="15" fill="rgb(245,195,53)" fg:x="13583" fg:w="6"/><text x="80.9667%" y="527.50"></text></g><g><title>[libdbus-1.so.3.32.2] (6 samples, 0.04%)</title><rect x="80.7523%" y="517" width="0.0357%" height="15" fill="rgb(240,92,26)" fg:x="13589" fg:w="6"/><text x="81.0023%" y="527.50"></text></g><g><title>dbus_bus_register (6 samples, 0.04%)</title><rect x="80.7523%" y="501" width="0.0357%" height="15" fill="rgb(207,40,23)" fg:x="13589" fg:w="6"/><text x="81.0023%" y="511.50"></text></g><g><title>dbus_connection_send_with_reply_and_block (6 samples, 0.04%)</title><rect x="80.7523%" y="485" width="0.0357%" height="15" fill="rgb(223,111,35)" fg:x="13589" fg:w="6"/><text x="81.0023%" y="495.50"></text></g><g><title>dbus_pending_call_block (6 samples, 0.04%)</title><rect x="80.7523%" y="469" width="0.0357%" height="15" fill="rgb(229,147,28)" fg:x="13589" fg:w="6"/><text x="81.0023%" y="479.50"></text></g><g><title>[libdbus-1.so.3.32.2] (6 samples, 0.04%)</title><rect x="80.7523%" y="453" width="0.0357%" height="15" fill="rgb(211,29,28)" fg:x="13589" fg:w="6"/><text x="81.0023%" y="463.50"></text></g><g><title>[libdbus-1.so.3.32.2] (6 samples, 0.04%)</title><rect x="80.7523%" y="437" width="0.0357%" height="15" fill="rgb(228,72,33)" fg:x="13589" fg:w="6"/><text x="81.0023%" y="447.50"></text></g><g><title>__poll (4 samples, 0.02%)</title><rect x="80.7642%" y="421" width="0.0238%" height="15" fill="rgb(205,214,31)" fg:x="13591" fg:w="4"/><text x="81.0142%" y="431.50"></text></g><g><title>[unknown] (2,065 samples, 12.27%)</title><rect x="68.5227%" y="613" width="12.2712%" height="15" fill="rgb(224,111,15)" fg:x="11531" fg:w="2065"/><text x="68.7727%" y="623.50">[unknown]</text></g><g><title>riscv64_emu::main (154 samples, 0.92%)</title><rect x="79.8788%" y="597" width="0.9151%" height="15" fill="rgb(253,21,26)" fg:x="13442" fg:w="154"/><text x="80.1288%" y="607.50"></text></g><g><title>sdl2::sdl::init (7 samples, 0.04%)</title><rect x="80.7523%" y="581" width="0.0416%" height="15" fill="rgb(245,139,43)" fg:x="13589" fg:w="7"/><text x="81.0023%" y="591.50"></text></g><g><title>sdl2::sdl::Sdl::new (7 samples, 0.04%)</title><rect x="80.7523%" y="565" width="0.0416%" height="15" fill="rgb(252,170,7)" fg:x="13589" fg:w="7"/><text x="81.0023%" y="575.50"></text></g><g><title>[libSDL2-2.0.so.0.2600.3] (7 samples, 0.04%)</title><rect x="80.7523%" y="549" width="0.0416%" height="15" fill="rgb(231,118,14)" fg:x="13589" fg:w="7"/><text x="81.0023%" y="559.50"></text></g><g><title>[libSDL2-2.0.so.0.2600.3] (7 samples, 0.04%)</title><rect x="80.7523%" y="533" width="0.0416%" height="15" fill="rgb(238,83,0)" fg:x="13589" fg:w="7"/><text x="81.0023%" y="543.50"></text></g><g><title>riscv64_emu::bus::Bus::update (1,721 samples, 10.23%)</title><rect x="80.7939%" y="565" width="10.2270%" height="15" fill="rgb(221,39,39)" fg:x="13596" fg:w="1721"/><text x="81.0439%" y="575.50">riscv64_emu::bu..</text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (1,721 samples, 10.23%)</title><rect x="80.7939%" y="549" width="10.2270%" height="15" fill="rgb(222,119,46)" fg:x="13596" fg:w="1721"/><text x="81.0439%" y="559.50">&lt;core::slice::i..</text></g><g><title>riscv64_emu::bus::Bus::update::{{closure}} (1,721 samples, 10.23%)</title><rect x="80.7939%" y="533" width="10.2270%" height="15" fill="rgb(222,165,49)" fg:x="13596" fg:w="1721"/><text x="81.0439%" y="543.50">riscv64_emu::bu..</text></g><g><title>riscv64_emu::cpu_core::CpuCore::handle_interrupt (790 samples, 4.69%)</title><rect x="91.0209%" y="565" width="4.6946%" height="15" fill="rgb(219,113,52)" fg:x="15317" fg:w="790"/><text x="91.2709%" y="575.50">riscv..</text></g><g><title>riscv64_emu::csr_regs::CsrRegs::read_raw_mask (790 samples, 4.69%)</title><rect x="91.0209%" y="549" width="4.6946%" height="15" fill="rgb(214,7,15)" fg:x="15317" fg:w="790"/><text x="91.2709%" y="559.50">riscv..</text></g><g><title>riscv64_emu::cpu_core::CpuCore::step (431 samples, 2.56%)</title><rect x="95.7155%" y="565" width="2.5612%" height="15" fill="rgb(235,32,4)" fg:x="16107" fg:w="431"/><text x="95.9655%" y="575.50">ri..</text></g><g><title>all (16,828 samples, 100%)</title><rect x="0.0000%" y="645" width="100.0000%" height="15" fill="rgb(238,90,54)" fg:x="0" fg:w="16828"/><text x="0.2500%" y="655.50"></text></g><g><title>riscv64-emu (16,803 samples, 99.85%)</title><rect x="0.1486%" y="629" width="99.8514%" height="15" fill="rgb(213,208,19)" fg:x="25" fg:w="16803"/><text x="0.3986%" y="639.50">riscv64-emu</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3,232 samples, 19.21%)</title><rect x="80.7939%" y="613" width="19.2061%" height="15" fill="rgb(233,156,4)" fg:x="13596" fg:w="3232"/><text x="81.0439%" y="623.50">std::sys_common::backtrace::__..</text></g><g><title>riscv64_emu::main::{{closure}} (3,232 samples, 19.21%)</title><rect x="80.7939%" y="597" width="19.2061%" height="15" fill="rgb(207,194,5)" fg:x="13596" fg:w="3232"/><text x="81.0439%" y="607.50">riscv64_emu::main::{{closure}}</text></g><g><title>riscv64_emu::cpu_core::CpuCore::execute (3,232 samples, 19.21%)</title><rect x="80.7939%" y="581" width="19.2061%" height="15" fill="rgb(206,111,30)" fg:x="13596" fg:w="3232"/><text x="81.0439%" y="591.50">riscv64_emu::cpu_core::CpuCore..</text></g><g><title>riscv64_emu::csr_regs::CsrRegs::write_raw_mask (290 samples, 1.72%)</title><rect x="98.2767%" y="565" width="1.7233%" height="15" fill="rgb(243,70,54)" fg:x="16538" fg:w="290"/><text x="98.5267%" y="575.50"></text></g></svg></svg>